//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AlquilerPeliculas {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BDVideoClubDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BDVideoClubDataSet : global::System.Data.DataSet {
        
        private ADMINISTRADORDataTable tableADMINISTRADOR;
        
        private ALQUILERDataTable tableALQUILER;
        
        private CLIENTEDataTable tableCLIENTE;
        
        private PELICULADataTable tablePELICULA;
        
        private global::System.Data.DataRelation relationFK_ALQUILER_ADMINISTR_ADMINIST;
        
        private global::System.Data.DataRelation relationFK_ALQUILER_ALQUILADO_CLIENTE;
        
        private global::System.Data.DataRelation relationFK_CLIENTE_CREA_ADMINIST;
        
        private global::System.Data.DataRelation relationFK_PELICULA_ALQUILADO_ALQUILER;
        
        private global::System.Data.DataRelation relationFK_PELICULA_ANADE_ADMINIST;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BDVideoClubDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BDVideoClubDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ADMINISTRADOR"] != null)) {
                    base.Tables.Add(new ADMINISTRADORDataTable(ds.Tables["ADMINISTRADOR"]));
                }
                if ((ds.Tables["ALQUILER"] != null)) {
                    base.Tables.Add(new ALQUILERDataTable(ds.Tables["ALQUILER"]));
                }
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["PELICULA"] != null)) {
                    base.Tables.Add(new PELICULADataTable(ds.Tables["PELICULA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ADMINISTRADORDataTable ADMINISTRADOR {
            get {
                return this.tableADMINISTRADOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ALQUILERDataTable ALQUILER {
            get {
                return this.tableALQUILER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CLIENTEDataTable CLIENTE {
            get {
                return this.tableCLIENTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PELICULADataTable PELICULA {
            get {
                return this.tablePELICULA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BDVideoClubDataSet cln = ((BDVideoClubDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ADMINISTRADOR"] != null)) {
                    base.Tables.Add(new ADMINISTRADORDataTable(ds.Tables["ADMINISTRADOR"]));
                }
                if ((ds.Tables["ALQUILER"] != null)) {
                    base.Tables.Add(new ALQUILERDataTable(ds.Tables["ALQUILER"]));
                }
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["PELICULA"] != null)) {
                    base.Tables.Add(new PELICULADataTable(ds.Tables["PELICULA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableADMINISTRADOR = ((ADMINISTRADORDataTable)(base.Tables["ADMINISTRADOR"]));
            if ((initTable == true)) {
                if ((this.tableADMINISTRADOR != null)) {
                    this.tableADMINISTRADOR.InitVars();
                }
            }
            this.tableALQUILER = ((ALQUILERDataTable)(base.Tables["ALQUILER"]));
            if ((initTable == true)) {
                if ((this.tableALQUILER != null)) {
                    this.tableALQUILER.InitVars();
                }
            }
            this.tableCLIENTE = ((CLIENTEDataTable)(base.Tables["CLIENTE"]));
            if ((initTable == true)) {
                if ((this.tableCLIENTE != null)) {
                    this.tableCLIENTE.InitVars();
                }
            }
            this.tablePELICULA = ((PELICULADataTable)(base.Tables["PELICULA"]));
            if ((initTable == true)) {
                if ((this.tablePELICULA != null)) {
                    this.tablePELICULA.InitVars();
                }
            }
            this.relationFK_ALQUILER_ADMINISTR_ADMINIST = this.Relations["FK_ALQUILER_ADMINISTR_ADMINIST"];
            this.relationFK_ALQUILER_ALQUILADO_CLIENTE = this.Relations["FK_ALQUILER_ALQUILADO_CLIENTE"];
            this.relationFK_CLIENTE_CREA_ADMINIST = this.Relations["FK_CLIENTE_CREA_ADMINIST"];
            this.relationFK_PELICULA_ALQUILADO_ALQUILER = this.Relations["FK_PELICULA_ALQUILADO_ALQUILER"];
            this.relationFK_PELICULA_ANADE_ADMINIST = this.Relations["FK_PELICULA_ANADE_ADMINIST"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BDVideoClubDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BDVideoClubDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableADMINISTRADOR = new ADMINISTRADORDataTable();
            base.Tables.Add(this.tableADMINISTRADOR);
            this.tableALQUILER = new ALQUILERDataTable();
            base.Tables.Add(this.tableALQUILER);
            this.tableCLIENTE = new CLIENTEDataTable();
            base.Tables.Add(this.tableCLIENTE);
            this.tablePELICULA = new PELICULADataTable();
            base.Tables.Add(this.tablePELICULA);
            this.relationFK_ALQUILER_ADMINISTR_ADMINIST = new global::System.Data.DataRelation("FK_ALQUILER_ADMINISTR_ADMINIST", new global::System.Data.DataColumn[] {
                        this.tableADMINISTRADOR.CEDULA_ADMINISTRADORColumn}, new global::System.Data.DataColumn[] {
                        this.tableALQUILER.CEDULA_ADMINISTRADORColumn}, false);
            this.Relations.Add(this.relationFK_ALQUILER_ADMINISTR_ADMINIST);
            this.relationFK_ALQUILER_ALQUILADO_CLIENTE = new global::System.Data.DataRelation("FK_ALQUILER_ALQUILADO_CLIENTE", new global::System.Data.DataColumn[] {
                        this.tableCLIENTE.CEDULA_CLIENTEColumn}, new global::System.Data.DataColumn[] {
                        this.tableALQUILER.CEDULA_CLIENTEColumn}, false);
            this.Relations.Add(this.relationFK_ALQUILER_ALQUILADO_CLIENTE);
            this.relationFK_CLIENTE_CREA_ADMINIST = new global::System.Data.DataRelation("FK_CLIENTE_CREA_ADMINIST", new global::System.Data.DataColumn[] {
                        this.tableADMINISTRADOR.CEDULA_ADMINISTRADORColumn}, new global::System.Data.DataColumn[] {
                        this.tableCLIENTE.CEDULA_ADMINISTRADORColumn}, false);
            this.Relations.Add(this.relationFK_CLIENTE_CREA_ADMINIST);
            this.relationFK_PELICULA_ALQUILADO_ALQUILER = new global::System.Data.DataRelation("FK_PELICULA_ALQUILADO_ALQUILER", new global::System.Data.DataColumn[] {
                        this.tableALQUILER.ID_ALQUILERColumn}, new global::System.Data.DataColumn[] {
                        this.tablePELICULA.ID_ALQUILERColumn}, false);
            this.Relations.Add(this.relationFK_PELICULA_ALQUILADO_ALQUILER);
            this.relationFK_PELICULA_ANADE_ADMINIST = new global::System.Data.DataRelation("FK_PELICULA_ANADE_ADMINIST", new global::System.Data.DataColumn[] {
                        this.tableADMINISTRADOR.CEDULA_ADMINISTRADORColumn}, new global::System.Data.DataColumn[] {
                        this.tablePELICULA.CEDULA_ADMINISTRADORColumn}, false);
            this.Relations.Add(this.relationFK_PELICULA_ANADE_ADMINIST);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeADMINISTRADOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeALQUILER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCLIENTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePELICULA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BDVideoClubDataSet ds = new BDVideoClubDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ADMINISTRADORRowChangeEventHandler(object sender, ADMINISTRADORRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ALQUILERRowChangeEventHandler(object sender, ALQUILERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CLIENTERowChangeEventHandler(object sender, CLIENTERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PELICULARowChangeEventHandler(object sender, PELICULARowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ADMINISTRADORDataTable : global::System.Data.TypedTableBase<ADMINISTRADORRow> {
            
            private global::System.Data.DataColumn columnCEDULA_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnNOMBRE_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnAPELLIDO_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnDIRECCION_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnTELEFONO_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnCORREO_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnCONTRASENA_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnESTADO_USUARIO;
            
            private global::System.Data.DataColumn columnIMAGEN_ADMINISTRADOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORDataTable() {
                this.TableName = "ADMINISTRADOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ADMINISTRADORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ADMINISTRADORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CEDULA_ADMINISTRADORColumn {
                get {
                    return this.columnCEDULA_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMBRE_ADMINISTRADORColumn {
                get {
                    return this.columnNOMBRE_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APELLIDO_ADMINISTRADORColumn {
                get {
                    return this.columnAPELLIDO_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIRECCION_ADMINISTRADORColumn {
                get {
                    return this.columnDIRECCION_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TELEFONO_ADMINISTRADORColumn {
                get {
                    return this.columnTELEFONO_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CORREO_ADMINISTRADORColumn {
                get {
                    return this.columnCORREO_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONTRASENA_ADMINISTRADORColumn {
                get {
                    return this.columnCONTRASENA_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ESTADO_USUARIOColumn {
                get {
                    return this.columnESTADO_USUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMAGEN_ADMINISTRADORColumn {
                get {
                    return this.columnIMAGEN_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow this[int index] {
                get {
                    return ((ADMINISTRADORRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADMINISTRADORRowChangeEventHandler ADMINISTRADORRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADMINISTRADORRowChangeEventHandler ADMINISTRADORRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADMINISTRADORRowChangeEventHandler ADMINISTRADORRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADMINISTRADORRowChangeEventHandler ADMINISTRADORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddADMINISTRADORRow(ADMINISTRADORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow AddADMINISTRADORRow(string CEDULA_ADMINISTRADOR, string NOMBRE_ADMINISTRADOR, string APELLIDO_ADMINISTRADOR, string DIRECCION_ADMINISTRADOR, string TELEFONO_ADMINISTRADOR, string CORREO_ADMINISTRADOR, string CONTRASENA_ADMINISTRADOR, string ESTADO_USUARIO, byte[] IMAGEN_ADMINISTRADOR) {
                ADMINISTRADORRow rowADMINISTRADORRow = ((ADMINISTRADORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CEDULA_ADMINISTRADOR,
                        NOMBRE_ADMINISTRADOR,
                        APELLIDO_ADMINISTRADOR,
                        DIRECCION_ADMINISTRADOR,
                        TELEFONO_ADMINISTRADOR,
                        CORREO_ADMINISTRADOR,
                        CONTRASENA_ADMINISTRADOR,
                        ESTADO_USUARIO,
                        IMAGEN_ADMINISTRADOR};
                rowADMINISTRADORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowADMINISTRADORRow);
                return rowADMINISTRADORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow FindByCEDULA_ADMINISTRADOR(string CEDULA_ADMINISTRADOR) {
                return ((ADMINISTRADORRow)(this.Rows.Find(new object[] {
                            CEDULA_ADMINISTRADOR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ADMINISTRADORDataTable cln = ((ADMINISTRADORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ADMINISTRADORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCEDULA_ADMINISTRADOR = base.Columns["CEDULA_ADMINISTRADOR"];
                this.columnNOMBRE_ADMINISTRADOR = base.Columns["NOMBRE_ADMINISTRADOR"];
                this.columnAPELLIDO_ADMINISTRADOR = base.Columns["APELLIDO_ADMINISTRADOR"];
                this.columnDIRECCION_ADMINISTRADOR = base.Columns["DIRECCION_ADMINISTRADOR"];
                this.columnTELEFONO_ADMINISTRADOR = base.Columns["TELEFONO_ADMINISTRADOR"];
                this.columnCORREO_ADMINISTRADOR = base.Columns["CORREO_ADMINISTRADOR"];
                this.columnCONTRASENA_ADMINISTRADOR = base.Columns["CONTRASENA_ADMINISTRADOR"];
                this.columnESTADO_USUARIO = base.Columns["ESTADO_USUARIO"];
                this.columnIMAGEN_ADMINISTRADOR = base.Columns["IMAGEN_ADMINISTRADOR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCEDULA_ADMINISTRADOR = new global::System.Data.DataColumn("CEDULA_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEDULA_ADMINISTRADOR);
                this.columnNOMBRE_ADMINISTRADOR = new global::System.Data.DataColumn("NOMBRE_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMBRE_ADMINISTRADOR);
                this.columnAPELLIDO_ADMINISTRADOR = new global::System.Data.DataColumn("APELLIDO_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPELLIDO_ADMINISTRADOR);
                this.columnDIRECCION_ADMINISTRADOR = new global::System.Data.DataColumn("DIRECCION_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIRECCION_ADMINISTRADOR);
                this.columnTELEFONO_ADMINISTRADOR = new global::System.Data.DataColumn("TELEFONO_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONO_ADMINISTRADOR);
                this.columnCORREO_ADMINISTRADOR = new global::System.Data.DataColumn("CORREO_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCORREO_ADMINISTRADOR);
                this.columnCONTRASENA_ADMINISTRADOR = new global::System.Data.DataColumn("CONTRASENA_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTRASENA_ADMINISTRADOR);
                this.columnESTADO_USUARIO = new global::System.Data.DataColumn("ESTADO_USUARIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTADO_USUARIO);
                this.columnIMAGEN_ADMINISTRADOR = new global::System.Data.DataColumn("IMAGEN_ADMINISTRADOR", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGEN_ADMINISTRADOR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCEDULA_ADMINISTRADOR}, true));
                this.columnCEDULA_ADMINISTRADOR.AllowDBNull = false;
                this.columnCEDULA_ADMINISTRADOR.Unique = true;
                this.columnCEDULA_ADMINISTRADOR.MaxLength = 100;
                this.columnNOMBRE_ADMINISTRADOR.AllowDBNull = false;
                this.columnNOMBRE_ADMINISTRADOR.MaxLength = 100;
                this.columnAPELLIDO_ADMINISTRADOR.AllowDBNull = false;
                this.columnAPELLIDO_ADMINISTRADOR.MaxLength = 100;
                this.columnDIRECCION_ADMINISTRADOR.AllowDBNull = false;
                this.columnDIRECCION_ADMINISTRADOR.MaxLength = 100;
                this.columnTELEFONO_ADMINISTRADOR.AllowDBNull = false;
                this.columnTELEFONO_ADMINISTRADOR.MaxLength = 100;
                this.columnCORREO_ADMINISTRADOR.AllowDBNull = false;
                this.columnCORREO_ADMINISTRADOR.MaxLength = 100;
                this.columnCONTRASENA_ADMINISTRADOR.AllowDBNull = false;
                this.columnCONTRASENA_ADMINISTRADOR.MaxLength = 100;
                this.columnESTADO_USUARIO.AllowDBNull = false;
                this.columnESTADO_USUARIO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow NewADMINISTRADORRow() {
                return ((ADMINISTRADORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ADMINISTRADORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ADMINISTRADORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ADMINISTRADORRowChanged != null)) {
                    this.ADMINISTRADORRowChanged(this, new ADMINISTRADORRowChangeEvent(((ADMINISTRADORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ADMINISTRADORRowChanging != null)) {
                    this.ADMINISTRADORRowChanging(this, new ADMINISTRADORRowChangeEvent(((ADMINISTRADORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ADMINISTRADORRowDeleted != null)) {
                    this.ADMINISTRADORRowDeleted(this, new ADMINISTRADORRowChangeEvent(((ADMINISTRADORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ADMINISTRADORRowDeleting != null)) {
                    this.ADMINISTRADORRowDeleting(this, new ADMINISTRADORRowChangeEvent(((ADMINISTRADORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveADMINISTRADORRow(ADMINISTRADORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BDVideoClubDataSet ds = new BDVideoClubDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ADMINISTRADORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ALQUILERDataTable : global::System.Data.TypedTableBase<ALQUILERRow> {
            
            private global::System.Data.DataColumn columnID_ALQUILER;
            
            private global::System.Data.DataColumn columnCEDULA_CLIENTE;
            
            private global::System.Data.DataColumn columnCEDULA_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnFECHAALQUILER_PELICULA;
            
            private global::System.Data.DataColumn columnFECHADEVOLUCION_PELICULA;
            
            private global::System.Data.DataColumn columnMULTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERDataTable() {
                this.TableName = "ALQUILER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ALQUILERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ALQUILERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ALQUILERColumn {
                get {
                    return this.columnID_ALQUILER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CEDULA_CLIENTEColumn {
                get {
                    return this.columnCEDULA_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CEDULA_ADMINISTRADORColumn {
                get {
                    return this.columnCEDULA_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECHAALQUILER_PELICULAColumn {
                get {
                    return this.columnFECHAALQUILER_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECHADEVOLUCION_PELICULAColumn {
                get {
                    return this.columnFECHADEVOLUCION_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MULTAColumn {
                get {
                    return this.columnMULTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow this[int index] {
                get {
                    return ((ALQUILERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ALQUILERRowChangeEventHandler ALQUILERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ALQUILERRowChangeEventHandler ALQUILERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ALQUILERRowChangeEventHandler ALQUILERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ALQUILERRowChangeEventHandler ALQUILERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddALQUILERRow(ALQUILERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow AddALQUILERRow(long ID_ALQUILER, CLIENTERow parentCLIENTERowByFK_ALQUILER_ALQUILADO_CLIENTE, ADMINISTRADORRow parentADMINISTRADORRowByFK_ALQUILER_ADMINISTR_ADMINIST, System.DateTime FECHAALQUILER_PELICULA, System.DateTime FECHADEVOLUCION_PELICULA, double MULTA) {
                ALQUILERRow rowALQUILERRow = ((ALQUILERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_ALQUILER,
                        null,
                        null,
                        FECHAALQUILER_PELICULA,
                        FECHADEVOLUCION_PELICULA,
                        MULTA};
                if ((parentCLIENTERowByFK_ALQUILER_ALQUILADO_CLIENTE != null)) {
                    columnValuesArray[1] = parentCLIENTERowByFK_ALQUILER_ALQUILADO_CLIENTE[0];
                }
                if ((parentADMINISTRADORRowByFK_ALQUILER_ADMINISTR_ADMINIST != null)) {
                    columnValuesArray[2] = parentADMINISTRADORRowByFK_ALQUILER_ADMINISTR_ADMINIST[0];
                }
                rowALQUILERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowALQUILERRow);
                return rowALQUILERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow FindByID_ALQUILER(long ID_ALQUILER) {
                return ((ALQUILERRow)(this.Rows.Find(new object[] {
                            ID_ALQUILER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ALQUILERDataTable cln = ((ALQUILERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ALQUILERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_ALQUILER = base.Columns["ID_ALQUILER"];
                this.columnCEDULA_CLIENTE = base.Columns["CEDULA_CLIENTE"];
                this.columnCEDULA_ADMINISTRADOR = base.Columns["CEDULA_ADMINISTRADOR"];
                this.columnFECHAALQUILER_PELICULA = base.Columns["FECHAALQUILER_PELICULA"];
                this.columnFECHADEVOLUCION_PELICULA = base.Columns["FECHADEVOLUCION_PELICULA"];
                this.columnMULTA = base.Columns["MULTA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_ALQUILER = new global::System.Data.DataColumn("ID_ALQUILER", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ALQUILER);
                this.columnCEDULA_CLIENTE = new global::System.Data.DataColumn("CEDULA_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEDULA_CLIENTE);
                this.columnCEDULA_ADMINISTRADOR = new global::System.Data.DataColumn("CEDULA_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEDULA_ADMINISTRADOR);
                this.columnFECHAALQUILER_PELICULA = new global::System.Data.DataColumn("FECHAALQUILER_PELICULA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHAALQUILER_PELICULA);
                this.columnFECHADEVOLUCION_PELICULA = new global::System.Data.DataColumn("FECHADEVOLUCION_PELICULA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHADEVOLUCION_PELICULA);
                this.columnMULTA = new global::System.Data.DataColumn("MULTA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMULTA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ALQUILER}, true));
                this.columnID_ALQUILER.AllowDBNull = false;
                this.columnID_ALQUILER.Unique = true;
                this.columnCEDULA_CLIENTE.MaxLength = 100;
                this.columnCEDULA_ADMINISTRADOR.MaxLength = 100;
                this.columnFECHAALQUILER_PELICULA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow NewALQUILERRow() {
                return ((ALQUILERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ALQUILERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ALQUILERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ALQUILERRowChanged != null)) {
                    this.ALQUILERRowChanged(this, new ALQUILERRowChangeEvent(((ALQUILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ALQUILERRowChanging != null)) {
                    this.ALQUILERRowChanging(this, new ALQUILERRowChangeEvent(((ALQUILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ALQUILERRowDeleted != null)) {
                    this.ALQUILERRowDeleted(this, new ALQUILERRowChangeEvent(((ALQUILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ALQUILERRowDeleting != null)) {
                    this.ALQUILERRowDeleting(this, new ALQUILERRowChangeEvent(((ALQUILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveALQUILERRow(ALQUILERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BDVideoClubDataSet ds = new BDVideoClubDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ALQUILERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CLIENTEDataTable : global::System.Data.TypedTableBase<CLIENTERow> {
            
            private global::System.Data.DataColumn columnCEDULA_CLIENTE;
            
            private global::System.Data.DataColumn columnCEDULA_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnNOMBRE_CLIENTE;
            
            private global::System.Data.DataColumn columnAPELLIDO_CLIENTE;
            
            private global::System.Data.DataColumn columnDIRECCION_CLIENTE;
            
            private global::System.Data.DataColumn columnTELEFONO_CLIENTE;
            
            private global::System.Data.DataColumn columnCORREO_CLIENTE;
            
            private global::System.Data.DataColumn columnCONTRASENA_CLIENTE;
            
            private global::System.Data.DataColumn columnESTADO_USUARIO;
            
            private global::System.Data.DataColumn columnIMAGEN_CLIENTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTEDataTable() {
                this.TableName = "CLIENTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CLIENTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CLIENTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CEDULA_CLIENTEColumn {
                get {
                    return this.columnCEDULA_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CEDULA_ADMINISTRADORColumn {
                get {
                    return this.columnCEDULA_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMBRE_CLIENTEColumn {
                get {
                    return this.columnNOMBRE_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APELLIDO_CLIENTEColumn {
                get {
                    return this.columnAPELLIDO_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIRECCION_CLIENTEColumn {
                get {
                    return this.columnDIRECCION_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TELEFONO_CLIENTEColumn {
                get {
                    return this.columnTELEFONO_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CORREO_CLIENTEColumn {
                get {
                    return this.columnCORREO_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONTRASENA_CLIENTEColumn {
                get {
                    return this.columnCONTRASENA_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ESTADO_USUARIOColumn {
                get {
                    return this.columnESTADO_USUARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMAGEN_CLIENTEColumn {
                get {
                    return this.columnIMAGEN_CLIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERow this[int index] {
                get {
                    return ((CLIENTERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLIENTERowChangeEventHandler CLIENTERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLIENTERowChangeEventHandler CLIENTERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLIENTERowChangeEventHandler CLIENTERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLIENTERowChangeEventHandler CLIENTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCLIENTERow(CLIENTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERow AddCLIENTERow(string CEDULA_CLIENTE, ADMINISTRADORRow parentADMINISTRADORRowByFK_CLIENTE_CREA_ADMINIST, string NOMBRE_CLIENTE, string APELLIDO_CLIENTE, string DIRECCION_CLIENTE, string TELEFONO_CLIENTE, string CORREO_CLIENTE, string CONTRASENA_CLIENTE, string ESTADO_USUARIO, byte[] IMAGEN_CLIENTE) {
                CLIENTERow rowCLIENTERow = ((CLIENTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CEDULA_CLIENTE,
                        null,
                        NOMBRE_CLIENTE,
                        APELLIDO_CLIENTE,
                        DIRECCION_CLIENTE,
                        TELEFONO_CLIENTE,
                        CORREO_CLIENTE,
                        CONTRASENA_CLIENTE,
                        ESTADO_USUARIO,
                        IMAGEN_CLIENTE};
                if ((parentADMINISTRADORRowByFK_CLIENTE_CREA_ADMINIST != null)) {
                    columnValuesArray[1] = parentADMINISTRADORRowByFK_CLIENTE_CREA_ADMINIST[0];
                }
                rowCLIENTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCLIENTERow);
                return rowCLIENTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERow FindByCEDULA_CLIENTE(string CEDULA_CLIENTE) {
                return ((CLIENTERow)(this.Rows.Find(new object[] {
                            CEDULA_CLIENTE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CLIENTEDataTable cln = ((CLIENTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CLIENTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCEDULA_CLIENTE = base.Columns["CEDULA_CLIENTE"];
                this.columnCEDULA_ADMINISTRADOR = base.Columns["CEDULA_ADMINISTRADOR"];
                this.columnNOMBRE_CLIENTE = base.Columns["NOMBRE_CLIENTE"];
                this.columnAPELLIDO_CLIENTE = base.Columns["APELLIDO_CLIENTE"];
                this.columnDIRECCION_CLIENTE = base.Columns["DIRECCION_CLIENTE"];
                this.columnTELEFONO_CLIENTE = base.Columns["TELEFONO_CLIENTE"];
                this.columnCORREO_CLIENTE = base.Columns["CORREO_CLIENTE"];
                this.columnCONTRASENA_CLIENTE = base.Columns["CONTRASENA_CLIENTE"];
                this.columnESTADO_USUARIO = base.Columns["ESTADO_USUARIO"];
                this.columnIMAGEN_CLIENTE = base.Columns["IMAGEN_CLIENTE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCEDULA_CLIENTE = new global::System.Data.DataColumn("CEDULA_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEDULA_CLIENTE);
                this.columnCEDULA_ADMINISTRADOR = new global::System.Data.DataColumn("CEDULA_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEDULA_ADMINISTRADOR);
                this.columnNOMBRE_CLIENTE = new global::System.Data.DataColumn("NOMBRE_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMBRE_CLIENTE);
                this.columnAPELLIDO_CLIENTE = new global::System.Data.DataColumn("APELLIDO_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPELLIDO_CLIENTE);
                this.columnDIRECCION_CLIENTE = new global::System.Data.DataColumn("DIRECCION_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIRECCION_CLIENTE);
                this.columnTELEFONO_CLIENTE = new global::System.Data.DataColumn("TELEFONO_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONO_CLIENTE);
                this.columnCORREO_CLIENTE = new global::System.Data.DataColumn("CORREO_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCORREO_CLIENTE);
                this.columnCONTRASENA_CLIENTE = new global::System.Data.DataColumn("CONTRASENA_CLIENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTRASENA_CLIENTE);
                this.columnESTADO_USUARIO = new global::System.Data.DataColumn("ESTADO_USUARIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTADO_USUARIO);
                this.columnIMAGEN_CLIENTE = new global::System.Data.DataColumn("IMAGEN_CLIENTE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGEN_CLIENTE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCEDULA_CLIENTE}, true));
                this.columnCEDULA_CLIENTE.AllowDBNull = false;
                this.columnCEDULA_CLIENTE.Unique = true;
                this.columnCEDULA_CLIENTE.MaxLength = 100;
                this.columnCEDULA_ADMINISTRADOR.MaxLength = 100;
                this.columnNOMBRE_CLIENTE.AllowDBNull = false;
                this.columnNOMBRE_CLIENTE.MaxLength = 100;
                this.columnAPELLIDO_CLIENTE.AllowDBNull = false;
                this.columnAPELLIDO_CLIENTE.MaxLength = 100;
                this.columnDIRECCION_CLIENTE.AllowDBNull = false;
                this.columnDIRECCION_CLIENTE.MaxLength = 100;
                this.columnTELEFONO_CLIENTE.AllowDBNull = false;
                this.columnTELEFONO_CLIENTE.MaxLength = 100;
                this.columnCORREO_CLIENTE.AllowDBNull = false;
                this.columnCORREO_CLIENTE.MaxLength = 100;
                this.columnCONTRASENA_CLIENTE.AllowDBNull = false;
                this.columnCONTRASENA_CLIENTE.MaxLength = 100;
                this.columnESTADO_USUARIO.AllowDBNull = false;
                this.columnESTADO_USUARIO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERow NewCLIENTERow() {
                return ((CLIENTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CLIENTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CLIENTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CLIENTERowChanged != null)) {
                    this.CLIENTERowChanged(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CLIENTERowChanging != null)) {
                    this.CLIENTERowChanging(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CLIENTERowDeleted != null)) {
                    this.CLIENTERowDeleted(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CLIENTERowDeleting != null)) {
                    this.CLIENTERowDeleting(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCLIENTERow(CLIENTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BDVideoClubDataSet ds = new BDVideoClubDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CLIENTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PELICULADataTable : global::System.Data.TypedTableBase<PELICULARow> {
            
            private global::System.Data.DataColumn columnTITULO_PELICULA;
            
            private global::System.Data.DataColumn columnID_ALQUILER;
            
            private global::System.Data.DataColumn columnCEDULA_ADMINISTRADOR;
            
            private global::System.Data.DataColumn columnDIRECTOR_PELICULA;
            
            private global::System.Data.DataColumn columnANIOESTRENO_PELICULA;
            
            private global::System.Data.DataColumn columnGENERO_PELICULA;
            
            private global::System.Data.DataColumn columnACTORES_PELICULA;
            
            private global::System.Data.DataColumn columnSINOPSIS_PELICULA;
            
            private global::System.Data.DataColumn columnCOPIA_PELICULA;
            
            private global::System.Data.DataColumn columnIMAGEN_PELICULA;
            
            private global::System.Data.DataColumn columnPRECIO_PELICULA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULADataTable() {
                this.TableName = "PELICULA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PELICULADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PELICULADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TITULO_PELICULAColumn {
                get {
                    return this.columnTITULO_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ALQUILERColumn {
                get {
                    return this.columnID_ALQUILER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CEDULA_ADMINISTRADORColumn {
                get {
                    return this.columnCEDULA_ADMINISTRADOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIRECTOR_PELICULAColumn {
                get {
                    return this.columnDIRECTOR_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANIOESTRENO_PELICULAColumn {
                get {
                    return this.columnANIOESTRENO_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GENERO_PELICULAColumn {
                get {
                    return this.columnGENERO_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTORES_PELICULAColumn {
                get {
                    return this.columnACTORES_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SINOPSIS_PELICULAColumn {
                get {
                    return this.columnSINOPSIS_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COPIA_PELICULAColumn {
                get {
                    return this.columnCOPIA_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMAGEN_PELICULAColumn {
                get {
                    return this.columnIMAGEN_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRECIO_PELICULAColumn {
                get {
                    return this.columnPRECIO_PELICULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARow this[int index] {
                get {
                    return ((PELICULARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELICULARowChangeEventHandler PELICULARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELICULARowChangeEventHandler PELICULARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELICULARowChangeEventHandler PELICULARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELICULARowChangeEventHandler PELICULARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPELICULARow(PELICULARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARow AddPELICULARow(string TITULO_PELICULA, ALQUILERRow parentALQUILERRowByFK_PELICULA_ALQUILADO_ALQUILER, ADMINISTRADORRow parentADMINISTRADORRowByFK_PELICULA_ANADE_ADMINIST, string DIRECTOR_PELICULA, System.DateTime ANIOESTRENO_PELICULA, string GENERO_PELICULA, string ACTORES_PELICULA, string SINOPSIS_PELICULA, int COPIA_PELICULA, byte[] IMAGEN_PELICULA, double PRECIO_PELICULA) {
                PELICULARow rowPELICULARow = ((PELICULARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TITULO_PELICULA,
                        null,
                        null,
                        DIRECTOR_PELICULA,
                        ANIOESTRENO_PELICULA,
                        GENERO_PELICULA,
                        ACTORES_PELICULA,
                        SINOPSIS_PELICULA,
                        COPIA_PELICULA,
                        IMAGEN_PELICULA,
                        PRECIO_PELICULA};
                if ((parentALQUILERRowByFK_PELICULA_ALQUILADO_ALQUILER != null)) {
                    columnValuesArray[1] = parentALQUILERRowByFK_PELICULA_ALQUILADO_ALQUILER[0];
                }
                if ((parentADMINISTRADORRowByFK_PELICULA_ANADE_ADMINIST != null)) {
                    columnValuesArray[2] = parentADMINISTRADORRowByFK_PELICULA_ANADE_ADMINIST[0];
                }
                rowPELICULARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPELICULARow);
                return rowPELICULARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARow FindByTITULO_PELICULA(string TITULO_PELICULA) {
                return ((PELICULARow)(this.Rows.Find(new object[] {
                            TITULO_PELICULA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PELICULADataTable cln = ((PELICULADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PELICULADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTITULO_PELICULA = base.Columns["TITULO_PELICULA"];
                this.columnID_ALQUILER = base.Columns["ID_ALQUILER"];
                this.columnCEDULA_ADMINISTRADOR = base.Columns["CEDULA_ADMINISTRADOR"];
                this.columnDIRECTOR_PELICULA = base.Columns["DIRECTOR_PELICULA"];
                this.columnANIOESTRENO_PELICULA = base.Columns["ANIOESTRENO_PELICULA"];
                this.columnGENERO_PELICULA = base.Columns["GENERO_PELICULA"];
                this.columnACTORES_PELICULA = base.Columns["ACTORES_PELICULA"];
                this.columnSINOPSIS_PELICULA = base.Columns["SINOPSIS_PELICULA"];
                this.columnCOPIA_PELICULA = base.Columns["COPIA_PELICULA"];
                this.columnIMAGEN_PELICULA = base.Columns["IMAGEN_PELICULA"];
                this.columnPRECIO_PELICULA = base.Columns["PRECIO_PELICULA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTITULO_PELICULA = new global::System.Data.DataColumn("TITULO_PELICULA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITULO_PELICULA);
                this.columnID_ALQUILER = new global::System.Data.DataColumn("ID_ALQUILER", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ALQUILER);
                this.columnCEDULA_ADMINISTRADOR = new global::System.Data.DataColumn("CEDULA_ADMINISTRADOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEDULA_ADMINISTRADOR);
                this.columnDIRECTOR_PELICULA = new global::System.Data.DataColumn("DIRECTOR_PELICULA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIRECTOR_PELICULA);
                this.columnANIOESTRENO_PELICULA = new global::System.Data.DataColumn("ANIOESTRENO_PELICULA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANIOESTRENO_PELICULA);
                this.columnGENERO_PELICULA = new global::System.Data.DataColumn("GENERO_PELICULA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGENERO_PELICULA);
                this.columnACTORES_PELICULA = new global::System.Data.DataColumn("ACTORES_PELICULA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTORES_PELICULA);
                this.columnSINOPSIS_PELICULA = new global::System.Data.DataColumn("SINOPSIS_PELICULA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSINOPSIS_PELICULA);
                this.columnCOPIA_PELICULA = new global::System.Data.DataColumn("COPIA_PELICULA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOPIA_PELICULA);
                this.columnIMAGEN_PELICULA = new global::System.Data.DataColumn("IMAGEN_PELICULA", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGEN_PELICULA);
                this.columnPRECIO_PELICULA = new global::System.Data.DataColumn("PRECIO_PELICULA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECIO_PELICULA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTITULO_PELICULA}, true));
                this.columnTITULO_PELICULA.AllowDBNull = false;
                this.columnTITULO_PELICULA.Unique = true;
                this.columnTITULO_PELICULA.MaxLength = 100;
                this.columnCEDULA_ADMINISTRADOR.MaxLength = 100;
                this.columnDIRECTOR_PELICULA.AllowDBNull = false;
                this.columnDIRECTOR_PELICULA.MaxLength = 100;
                this.columnANIOESTRENO_PELICULA.AllowDBNull = false;
                this.columnGENERO_PELICULA.AllowDBNull = false;
                this.columnGENERO_PELICULA.MaxLength = 100;
                this.columnACTORES_PELICULA.AllowDBNull = false;
                this.columnACTORES_PELICULA.MaxLength = 100;
                this.columnSINOPSIS_PELICULA.AllowDBNull = false;
                this.columnSINOPSIS_PELICULA.MaxLength = 100;
                this.columnCOPIA_PELICULA.AllowDBNull = false;
                this.columnPRECIO_PELICULA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARow NewPELICULARow() {
                return ((PELICULARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PELICULARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PELICULARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PELICULARowChanged != null)) {
                    this.PELICULARowChanged(this, new PELICULARowChangeEvent(((PELICULARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PELICULARowChanging != null)) {
                    this.PELICULARowChanging(this, new PELICULARowChangeEvent(((PELICULARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PELICULARowDeleted != null)) {
                    this.PELICULARowDeleted(this, new PELICULARowChangeEvent(((PELICULARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PELICULARowDeleting != null)) {
                    this.PELICULARowDeleting(this, new PELICULARowChangeEvent(((PELICULARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePELICULARow(PELICULARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BDVideoClubDataSet ds = new BDVideoClubDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PELICULADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ADMINISTRADORRow : global::System.Data.DataRow {
            
            private ADMINISTRADORDataTable tableADMINISTRADOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ADMINISTRADORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableADMINISTRADOR = ((ADMINISTRADORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CEDULA_ADMINISTRADOR {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.CEDULA_ADMINISTRADORColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.CEDULA_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMBRE_ADMINISTRADOR {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.NOMBRE_ADMINISTRADORColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.NOMBRE_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APELLIDO_ADMINISTRADOR {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.APELLIDO_ADMINISTRADORColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.APELLIDO_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIRECCION_ADMINISTRADOR {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.DIRECCION_ADMINISTRADORColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.DIRECCION_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TELEFONO_ADMINISTRADOR {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.TELEFONO_ADMINISTRADORColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.TELEFONO_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CORREO_ADMINISTRADOR {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.CORREO_ADMINISTRADORColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.CORREO_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONTRASENA_ADMINISTRADOR {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.CONTRASENA_ADMINISTRADORColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.CONTRASENA_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ESTADO_USUARIO {
                get {
                    return ((string)(this[this.tableADMINISTRADOR.ESTADO_USUARIOColumn]));
                }
                set {
                    this[this.tableADMINISTRADOR.ESTADO_USUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] IMAGEN_ADMINISTRADOR {
                get {
                    try {
                        return ((byte[])(this[this.tableADMINISTRADOR.IMAGEN_ADMINISTRADORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IMAGEN_ADMINISTRADOR\' de la tabla \'ADMINISTRADOR\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableADMINISTRADOR.IMAGEN_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMAGEN_ADMINISTRADORNull() {
                return this.IsNull(this.tableADMINISTRADOR.IMAGEN_ADMINISTRADORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMAGEN_ADMINISTRADORNull() {
                this[this.tableADMINISTRADOR.IMAGEN_ADMINISTRADORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow[] GetALQUILERRows() {
                if ((this.Table.ChildRelations["FK_ALQUILER_ADMINISTR_ADMINIST"] == null)) {
                    return new ALQUILERRow[0];
                }
                else {
                    return ((ALQUILERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ALQUILER_ADMINISTR_ADMINIST"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERow[] GetCLIENTERows() {
                if ((this.Table.ChildRelations["FK_CLIENTE_CREA_ADMINIST"] == null)) {
                    return new CLIENTERow[0];
                }
                else {
                    return ((CLIENTERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CLIENTE_CREA_ADMINIST"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARow[] GetPELICULARows() {
                if ((this.Table.ChildRelations["FK_PELICULA_ANADE_ADMINIST"] == null)) {
                    return new PELICULARow[0];
                }
                else {
                    return ((PELICULARow[])(base.GetChildRows(this.Table.ChildRelations["FK_PELICULA_ANADE_ADMINIST"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ALQUILERRow : global::System.Data.DataRow {
            
            private ALQUILERDataTable tableALQUILER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ALQUILERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableALQUILER = ((ALQUILERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID_ALQUILER {
                get {
                    return ((long)(this[this.tableALQUILER.ID_ALQUILERColumn]));
                }
                set {
                    this[this.tableALQUILER.ID_ALQUILERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CEDULA_CLIENTE {
                get {
                    try {
                        return ((string)(this[this.tableALQUILER.CEDULA_CLIENTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CEDULA_CLIENTE\' de la tabla \'ALQUILER\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALQUILER.CEDULA_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CEDULA_ADMINISTRADOR {
                get {
                    try {
                        return ((string)(this[this.tableALQUILER.CEDULA_ADMINISTRADORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CEDULA_ADMINISTRADOR\' de la tabla \'ALQUILER\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALQUILER.CEDULA_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FECHAALQUILER_PELICULA {
                get {
                    return ((global::System.DateTime)(this[this.tableALQUILER.FECHAALQUILER_PELICULAColumn]));
                }
                set {
                    this[this.tableALQUILER.FECHAALQUILER_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FECHADEVOLUCION_PELICULA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableALQUILER.FECHADEVOLUCION_PELICULAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECHADEVOLUCION_PELICULA\' de la tabla \'ALQUILER\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableALQUILER.FECHADEVOLUCION_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MULTA {
                get {
                    try {
                        return ((double)(this[this.tableALQUILER.MULTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MULTA\' de la tabla \'ALQUILER\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableALQUILER.MULTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow ADMINISTRADORRow {
                get {
                    return ((ADMINISTRADORRow)(this.GetParentRow(this.Table.ParentRelations["FK_ALQUILER_ADMINISTR_ADMINIST"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ALQUILER_ADMINISTR_ADMINIST"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERow CLIENTERow {
                get {
                    return ((CLIENTERow)(this.GetParentRow(this.Table.ParentRelations["FK_ALQUILER_ALQUILADO_CLIENTE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ALQUILER_ALQUILADO_CLIENTE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCEDULA_CLIENTENull() {
                return this.IsNull(this.tableALQUILER.CEDULA_CLIENTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCEDULA_CLIENTENull() {
                this[this.tableALQUILER.CEDULA_CLIENTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCEDULA_ADMINISTRADORNull() {
                return this.IsNull(this.tableALQUILER.CEDULA_ADMINISTRADORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCEDULA_ADMINISTRADORNull() {
                this[this.tableALQUILER.CEDULA_ADMINISTRADORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFECHADEVOLUCION_PELICULANull() {
                return this.IsNull(this.tableALQUILER.FECHADEVOLUCION_PELICULAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFECHADEVOLUCION_PELICULANull() {
                this[this.tableALQUILER.FECHADEVOLUCION_PELICULAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMULTANull() {
                return this.IsNull(this.tableALQUILER.MULTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMULTANull() {
                this[this.tableALQUILER.MULTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARow[] GetPELICULARows() {
                if ((this.Table.ChildRelations["FK_PELICULA_ALQUILADO_ALQUILER"] == null)) {
                    return new PELICULARow[0];
                }
                else {
                    return ((PELICULARow[])(base.GetChildRows(this.Table.ChildRelations["FK_PELICULA_ALQUILADO_ALQUILER"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CLIENTERow : global::System.Data.DataRow {
            
            private CLIENTEDataTable tableCLIENTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CLIENTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCLIENTE = ((CLIENTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CEDULA_CLIENTE {
                get {
                    return ((string)(this[this.tableCLIENTE.CEDULA_CLIENTEColumn]));
                }
                set {
                    this[this.tableCLIENTE.CEDULA_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CEDULA_ADMINISTRADOR {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CEDULA_ADMINISTRADORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CEDULA_ADMINISTRADOR\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CEDULA_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMBRE_CLIENTE {
                get {
                    return ((string)(this[this.tableCLIENTE.NOMBRE_CLIENTEColumn]));
                }
                set {
                    this[this.tableCLIENTE.NOMBRE_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APELLIDO_CLIENTE {
                get {
                    return ((string)(this[this.tableCLIENTE.APELLIDO_CLIENTEColumn]));
                }
                set {
                    this[this.tableCLIENTE.APELLIDO_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIRECCION_CLIENTE {
                get {
                    return ((string)(this[this.tableCLIENTE.DIRECCION_CLIENTEColumn]));
                }
                set {
                    this[this.tableCLIENTE.DIRECCION_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TELEFONO_CLIENTE {
                get {
                    return ((string)(this[this.tableCLIENTE.TELEFONO_CLIENTEColumn]));
                }
                set {
                    this[this.tableCLIENTE.TELEFONO_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CORREO_CLIENTE {
                get {
                    return ((string)(this[this.tableCLIENTE.CORREO_CLIENTEColumn]));
                }
                set {
                    this[this.tableCLIENTE.CORREO_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONTRASENA_CLIENTE {
                get {
                    return ((string)(this[this.tableCLIENTE.CONTRASENA_CLIENTEColumn]));
                }
                set {
                    this[this.tableCLIENTE.CONTRASENA_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ESTADO_USUARIO {
                get {
                    return ((string)(this[this.tableCLIENTE.ESTADO_USUARIOColumn]));
                }
                set {
                    this[this.tableCLIENTE.ESTADO_USUARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] IMAGEN_CLIENTE {
                get {
                    try {
                        return ((byte[])(this[this.tableCLIENTE.IMAGEN_CLIENTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IMAGEN_CLIENTE\' de la tabla \'CLIENTE\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.IMAGEN_CLIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow ADMINISTRADORRow {
                get {
                    return ((ADMINISTRADORRow)(this.GetParentRow(this.Table.ParentRelations["FK_CLIENTE_CREA_ADMINIST"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CLIENTE_CREA_ADMINIST"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCEDULA_ADMINISTRADORNull() {
                return this.IsNull(this.tableCLIENTE.CEDULA_ADMINISTRADORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCEDULA_ADMINISTRADORNull() {
                this[this.tableCLIENTE.CEDULA_ADMINISTRADORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMAGEN_CLIENTENull() {
                return this.IsNull(this.tableCLIENTE.IMAGEN_CLIENTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMAGEN_CLIENTENull() {
                this[this.tableCLIENTE.IMAGEN_CLIENTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow[] GetALQUILERRows() {
                if ((this.Table.ChildRelations["FK_ALQUILER_ALQUILADO_CLIENTE"] == null)) {
                    return new ALQUILERRow[0];
                }
                else {
                    return ((ALQUILERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ALQUILER_ALQUILADO_CLIENTE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PELICULARow : global::System.Data.DataRow {
            
            private PELICULADataTable tablePELICULA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PELICULARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePELICULA = ((PELICULADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TITULO_PELICULA {
                get {
                    return ((string)(this[this.tablePELICULA.TITULO_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.TITULO_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID_ALQUILER {
                get {
                    try {
                        return ((long)(this[this.tablePELICULA.ID_ALQUILERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID_ALQUILER\' de la tabla \'PELICULA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePELICULA.ID_ALQUILERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CEDULA_ADMINISTRADOR {
                get {
                    try {
                        return ((string)(this[this.tablePELICULA.CEDULA_ADMINISTRADORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CEDULA_ADMINISTRADOR\' de la tabla \'PELICULA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePELICULA.CEDULA_ADMINISTRADORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIRECTOR_PELICULA {
                get {
                    return ((string)(this[this.tablePELICULA.DIRECTOR_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.DIRECTOR_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ANIOESTRENO_PELICULA {
                get {
                    return ((global::System.DateTime)(this[this.tablePELICULA.ANIOESTRENO_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.ANIOESTRENO_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GENERO_PELICULA {
                get {
                    return ((string)(this[this.tablePELICULA.GENERO_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.GENERO_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACTORES_PELICULA {
                get {
                    return ((string)(this[this.tablePELICULA.ACTORES_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.ACTORES_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SINOPSIS_PELICULA {
                get {
                    return ((string)(this[this.tablePELICULA.SINOPSIS_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.SINOPSIS_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int COPIA_PELICULA {
                get {
                    return ((int)(this[this.tablePELICULA.COPIA_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.COPIA_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] IMAGEN_PELICULA {
                get {
                    try {
                        return ((byte[])(this[this.tablePELICULA.IMAGEN_PELICULAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IMAGEN_PELICULA\' de la tabla \'PELICULA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePELICULA.IMAGEN_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PRECIO_PELICULA {
                get {
                    return ((double)(this[this.tablePELICULA.PRECIO_PELICULAColumn]));
                }
                set {
                    this[this.tablePELICULA.PRECIO_PELICULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow ALQUILERRow {
                get {
                    return ((ALQUILERRow)(this.GetParentRow(this.Table.ParentRelations["FK_PELICULA_ALQUILADO_ALQUILER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PELICULA_ALQUILADO_ALQUILER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow ADMINISTRADORRow {
                get {
                    return ((ADMINISTRADORRow)(this.GetParentRow(this.Table.ParentRelations["FK_PELICULA_ANADE_ADMINIST"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PELICULA_ANADE_ADMINIST"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_ALQUILERNull() {
                return this.IsNull(this.tablePELICULA.ID_ALQUILERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_ALQUILERNull() {
                this[this.tablePELICULA.ID_ALQUILERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCEDULA_ADMINISTRADORNull() {
                return this.IsNull(this.tablePELICULA.CEDULA_ADMINISTRADORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCEDULA_ADMINISTRADORNull() {
                this[this.tablePELICULA.CEDULA_ADMINISTRADORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMAGEN_PELICULANull() {
                return this.IsNull(this.tablePELICULA.IMAGEN_PELICULAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMAGEN_PELICULANull() {
                this[this.tablePELICULA.IMAGEN_PELICULAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ADMINISTRADORRowChangeEvent : global::System.EventArgs {
            
            private ADMINISTRADORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRowChangeEvent(ADMINISTRADORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADMINISTRADORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ALQUILERRowChangeEvent : global::System.EventArgs {
            
            private ALQUILERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRowChangeEvent(ALQUILERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ALQUILERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CLIENTERowChangeEvent : global::System.EventArgs {
            
            private CLIENTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERowChangeEvent(CLIENTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLIENTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PELICULARowChangeEvent : global::System.EventArgs {
            
            private PELICULARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARowChangeEvent(PELICULARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELICULARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AlquilerPeliculas.BDVideoClubDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ADMINISTRADORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ADMINISTRADORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ADMINISTRADOR";
            tableMapping.ColumnMappings.Add("CEDULA_ADMINISTRADOR", "CEDULA_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("NOMBRE_ADMINISTRADOR", "NOMBRE_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("APELLIDO_ADMINISTRADOR", "APELLIDO_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("DIRECCION_ADMINISTRADOR", "DIRECCION_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("TELEFONO_ADMINISTRADOR", "TELEFONO_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("CORREO_ADMINISTRADOR", "CORREO_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("CONTRASENA_ADMINISTRADOR", "CONTRASENA_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("ESTADO_USUARIO", "ESTADO_USUARIO");
            tableMapping.ColumnMappings.Add("IMAGEN_ADMINISTRADOR", "IMAGEN_ADMINISTRADOR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ADMINISTRADOR] WHERE (([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR) AND ([NOMBRE_ADMINISTRADOR] = @Original_NOMBRE_ADMINISTRADOR) AND ([APELLIDO_ADMINISTRADOR] = @Original_APELLIDO_ADMINISTRADOR) AND ([DIRECCION_ADMINISTRADOR] = @Original_DIRECCION_ADMINISTRADOR) AND ([TELEFONO_ADMINISTRADOR] = @Original_TELEFONO_ADMINISTRADOR) AND ([CORREO_ADMINISTRADOR] = @Original_CORREO_ADMINISTRADOR) AND ([CONTRASENA_ADMINISTRADOR] = @Original_CONTRASENA_ADMINISTRADOR) AND ([ESTADO_USUARIO] = @Original_ESTADO_USUARIO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMBRE_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APELLIDO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIRECCION_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CORREO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTRASENA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ADMINISTRADOR] ([CEDULA_ADMINISTRADOR], [NOMBRE_ADMINISTRADOR], [APELLIDO_ADMINISTRADOR], [DIRECCION_ADMINISTRADOR], [TELEFONO_ADMINISTRADOR], [CORREO_ADMINISTRADOR], [CONTRASENA_ADMINISTRADOR], [ESTADO_USUARIO], [IMAGEN_ADMINISTRADOR]) VALUES (@CEDULA_ADMINISTRADOR, @NOMBRE_ADMINISTRADOR, @APELLIDO_ADMINISTRADOR, @DIRECCION_ADMINISTRADOR, @TELEFONO_ADMINISTRADOR, @CORREO_ADMINISTRADOR, @CONTRASENA_ADMINISTRADOR, @ESTADO_USUARIO, @IMAGEN_ADMINISTRADOR);
SELECT CEDULA_ADMINISTRADOR, NOMBRE_ADMINISTRADOR, APELLIDO_ADMINISTRADOR, DIRECCION_ADMINISTRADOR, TELEFONO_ADMINISTRADOR, CORREO_ADMINISTRADOR, CONTRASENA_ADMINISTRADOR, ESTADO_USUARIO, IMAGEN_ADMINISTRADOR FROM ADMINISTRADOR WHERE (CEDULA_ADMINISTRADOR = @CEDULA_ADMINISTRADOR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMBRE_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APELLIDO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIRECCION_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CORREO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTRASENA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMAGEN_ADMINISTRADOR", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMAGEN_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ADMINISTRADOR] SET [CEDULA_ADMINISTRADOR] = @CEDULA_ADMINISTRADOR, [NOMBRE_ADMINISTRADOR] = @NOMBRE_ADMINISTRADOR, [APELLIDO_ADMINISTRADOR] = @APELLIDO_ADMINISTRADOR, [DIRECCION_ADMINISTRADOR] = @DIRECCION_ADMINISTRADOR, [TELEFONO_ADMINISTRADOR] = @TELEFONO_ADMINISTRADOR, [CORREO_ADMINISTRADOR] = @CORREO_ADMINISTRADOR, [CONTRASENA_ADMINISTRADOR] = @CONTRASENA_ADMINISTRADOR, [ESTADO_USUARIO] = @ESTADO_USUARIO, [IMAGEN_ADMINISTRADOR] = @IMAGEN_ADMINISTRADOR WHERE (([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR) AND ([NOMBRE_ADMINISTRADOR] = @Original_NOMBRE_ADMINISTRADOR) AND ([APELLIDO_ADMINISTRADOR] = @Original_APELLIDO_ADMINISTRADOR) AND ([DIRECCION_ADMINISTRADOR] = @Original_DIRECCION_ADMINISTRADOR) AND ([TELEFONO_ADMINISTRADOR] = @Original_TELEFONO_ADMINISTRADOR) AND ([CORREO_ADMINISTRADOR] = @Original_CORREO_ADMINISTRADOR) AND ([CONTRASENA_ADMINISTRADOR] = @Original_CONTRASENA_ADMINISTRADOR) AND ([ESTADO_USUARIO] = @Original_ESTADO_USUARIO));
SELECT CEDULA_ADMINISTRADOR, NOMBRE_ADMINISTRADOR, APELLIDO_ADMINISTRADOR, DIRECCION_ADMINISTRADOR, TELEFONO_ADMINISTRADOR, CORREO_ADMINISTRADOR, CONTRASENA_ADMINISTRADOR, ESTADO_USUARIO, IMAGEN_ADMINISTRADOR FROM ADMINISTRADOR WHERE (CEDULA_ADMINISTRADOR = @CEDULA_ADMINISTRADOR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMBRE_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APELLIDO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIRECCION_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CORREO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTRASENA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMAGEN_ADMINISTRADOR", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMAGEN_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMBRE_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APELLIDO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIRECCION_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CORREO_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTRASENA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AlquilerPeliculas.Properties.Settings.Default.VideoClubConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CEDULA_ADMINISTRADOR, NOMBRE_ADMINISTRADOR, APELLIDO_ADMINISTRADOR, DIRECC" +
                "ION_ADMINISTRADOR, TELEFONO_ADMINISTRADOR, CORREO_ADMINISTRADOR, CONTRASENA_ADMI" +
                "NISTRADOR, ESTADO_USUARIO, IMAGEN_ADMINISTRADOR FROM dbo.ADMINISTRADOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BDVideoClubDataSet.ADMINISTRADORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BDVideoClubDataSet.ADMINISTRADORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BDVideoClubDataSet.ADMINISTRADORDataTable dataTable = new BDVideoClubDataSet.ADMINISTRADORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet.ADMINISTRADORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ADMINISTRADOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CEDULA_ADMINISTRADOR, string Original_NOMBRE_ADMINISTRADOR, string Original_APELLIDO_ADMINISTRADOR, string Original_DIRECCION_ADMINISTRADOR, string Original_TELEFONO_ADMINISTRADOR, string Original_CORREO_ADMINISTRADOR, string Original_CONTRASENA_ADMINISTRADOR, string Original_ESTADO_USUARIO) {
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_CEDULA_ADMINISTRADOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            if ((Original_NOMBRE_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_NOMBRE_ADMINISTRADOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NOMBRE_ADMINISTRADOR));
            }
            if ((Original_APELLIDO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_APELLIDO_ADMINISTRADOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_APELLIDO_ADMINISTRADOR));
            }
            if ((Original_DIRECCION_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_DIRECCION_ADMINISTRADOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DIRECCION_ADMINISTRADOR));
            }
            if ((Original_TELEFONO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_TELEFONO_ADMINISTRADOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TELEFONO_ADMINISTRADOR));
            }
            if ((Original_CORREO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_CORREO_ADMINISTRADOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CORREO_ADMINISTRADOR));
            }
            if ((Original_CONTRASENA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_CONTRASENA_ADMINISTRADOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CONTRASENA_ADMINISTRADOR));
            }
            if ((Original_ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("Original_ESTADO_USUARIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ESTADO_USUARIO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CEDULA_ADMINISTRADOR, string NOMBRE_ADMINISTRADOR, string APELLIDO_ADMINISTRADOR, string DIRECCION_ADMINISTRADOR, string TELEFONO_ADMINISTRADOR, string CORREO_ADMINISTRADOR, string CONTRASENA_ADMINISTRADOR, string ESTADO_USUARIO, byte[] IMAGEN_ADMINISTRADOR) {
            if ((CEDULA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("CEDULA_ADMINISTRADOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            if ((NOMBRE_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("NOMBRE_ADMINISTRADOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOMBRE_ADMINISTRADOR));
            }
            if ((APELLIDO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("APELLIDO_ADMINISTRADOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(APELLIDO_ADMINISTRADOR));
            }
            if ((DIRECCION_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("DIRECCION_ADMINISTRADOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DIRECCION_ADMINISTRADOR));
            }
            if ((TELEFONO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("TELEFONO_ADMINISTRADOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TELEFONO_ADMINISTRADOR));
            }
            if ((CORREO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("CORREO_ADMINISTRADOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CORREO_ADMINISTRADOR));
            }
            if ((CONTRASENA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("CONTRASENA_ADMINISTRADOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CONTRASENA_ADMINISTRADOR));
            }
            if ((ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("ESTADO_USUARIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ESTADO_USUARIO));
            }
            if ((IMAGEN_ADMINISTRADOR == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte[])(IMAGEN_ADMINISTRADOR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CEDULA_ADMINISTRADOR, 
                    string NOMBRE_ADMINISTRADOR, 
                    string APELLIDO_ADMINISTRADOR, 
                    string DIRECCION_ADMINISTRADOR, 
                    string TELEFONO_ADMINISTRADOR, 
                    string CORREO_ADMINISTRADOR, 
                    string CONTRASENA_ADMINISTRADOR, 
                    string ESTADO_USUARIO, 
                    byte[] IMAGEN_ADMINISTRADOR, 
                    string Original_CEDULA_ADMINISTRADOR, 
                    string Original_NOMBRE_ADMINISTRADOR, 
                    string Original_APELLIDO_ADMINISTRADOR, 
                    string Original_DIRECCION_ADMINISTRADOR, 
                    string Original_TELEFONO_ADMINISTRADOR, 
                    string Original_CORREO_ADMINISTRADOR, 
                    string Original_CONTRASENA_ADMINISTRADOR, 
                    string Original_ESTADO_USUARIO) {
            if ((CEDULA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("CEDULA_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            if ((NOMBRE_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("NOMBRE_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOMBRE_ADMINISTRADOR));
            }
            if ((APELLIDO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("APELLIDO_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(APELLIDO_ADMINISTRADOR));
            }
            if ((DIRECCION_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("DIRECCION_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DIRECCION_ADMINISTRADOR));
            }
            if ((TELEFONO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("TELEFONO_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TELEFONO_ADMINISTRADOR));
            }
            if ((CORREO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("CORREO_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CORREO_ADMINISTRADOR));
            }
            if ((CONTRASENA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("CONTRASENA_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CONTRASENA_ADMINISTRADOR));
            }
            if ((ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("ESTADO_USUARIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ESTADO_USUARIO));
            }
            if ((IMAGEN_ADMINISTRADOR == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte[])(IMAGEN_ADMINISTRADOR));
            }
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_CEDULA_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            if ((Original_NOMBRE_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_NOMBRE_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_NOMBRE_ADMINISTRADOR));
            }
            if ((Original_APELLIDO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_APELLIDO_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_APELLIDO_ADMINISTRADOR));
            }
            if ((Original_DIRECCION_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_DIRECCION_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DIRECCION_ADMINISTRADOR));
            }
            if ((Original_TELEFONO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_TELEFONO_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_TELEFONO_ADMINISTRADOR));
            }
            if ((Original_CORREO_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_CORREO_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CORREO_ADMINISTRADOR));
            }
            if ((Original_CONTRASENA_ADMINISTRADOR == null)) {
                throw new global::System.ArgumentNullException("Original_CONTRASENA_ADMINISTRADOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CONTRASENA_ADMINISTRADOR));
            }
            if ((Original_ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("Original_ESTADO_USUARIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ESTADO_USUARIO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOMBRE_ADMINISTRADOR, 
                    string APELLIDO_ADMINISTRADOR, 
                    string DIRECCION_ADMINISTRADOR, 
                    string TELEFONO_ADMINISTRADOR, 
                    string CORREO_ADMINISTRADOR, 
                    string CONTRASENA_ADMINISTRADOR, 
                    string ESTADO_USUARIO, 
                    byte[] IMAGEN_ADMINISTRADOR, 
                    string Original_CEDULA_ADMINISTRADOR, 
                    string Original_NOMBRE_ADMINISTRADOR, 
                    string Original_APELLIDO_ADMINISTRADOR, 
                    string Original_DIRECCION_ADMINISTRADOR, 
                    string Original_TELEFONO_ADMINISTRADOR, 
                    string Original_CORREO_ADMINISTRADOR, 
                    string Original_CONTRASENA_ADMINISTRADOR, 
                    string Original_ESTADO_USUARIO) {
            return this.Update(Original_CEDULA_ADMINISTRADOR, NOMBRE_ADMINISTRADOR, APELLIDO_ADMINISTRADOR, DIRECCION_ADMINISTRADOR, TELEFONO_ADMINISTRADOR, CORREO_ADMINISTRADOR, CONTRASENA_ADMINISTRADOR, ESTADO_USUARIO, IMAGEN_ADMINISTRADOR, Original_CEDULA_ADMINISTRADOR, Original_NOMBRE_ADMINISTRADOR, Original_APELLIDO_ADMINISTRADOR, Original_DIRECCION_ADMINISTRADOR, Original_TELEFONO_ADMINISTRADOR, Original_CORREO_ADMINISTRADOR, Original_CONTRASENA_ADMINISTRADOR, Original_ESTADO_USUARIO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ALQUILERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ALQUILERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ALQUILER";
            tableMapping.ColumnMappings.Add("ID_ALQUILER", "ID_ALQUILER");
            tableMapping.ColumnMappings.Add("CEDULA_CLIENTE", "CEDULA_CLIENTE");
            tableMapping.ColumnMappings.Add("CEDULA_ADMINISTRADOR", "CEDULA_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("FECHAALQUILER_PELICULA", "FECHAALQUILER_PELICULA");
            tableMapping.ColumnMappings.Add("FECHADEVOLUCION_PELICULA", "FECHADEVOLUCION_PELICULA");
            tableMapping.ColumnMappings.Add("MULTA", "MULTA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ALQUILER] WHERE (([ID_ALQUILER] = @Original_ID_ALQUILER) AND ((@IsNull_CEDULA_CLIENTE = 1 AND [CEDULA_CLIENTE] IS NULL) OR ([CEDULA_CLIENTE] = @Original_CEDULA_CLIENTE)) AND ((@IsNull_CEDULA_ADMINISTRADOR = 1 AND [CEDULA_ADMINISTRADOR] IS NULL) OR ([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR)) AND ([FECHAALQUILER_PELICULA] = @Original_FECHAALQUILER_PELICULA) AND ((@IsNull_FECHADEVOLUCION_PELICULA = 1 AND [FECHADEVOLUCION_PELICULA] IS NULL) OR ([FECHADEVOLUCION_PELICULA] = @Original_FECHADEVOLUCION_PELICULA)) AND ((@IsNull_MULTA = 1 AND [MULTA] IS NULL) OR ([MULTA] = @Original_MULTA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_CLIENTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FECHAALQUILER_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHAALQUILER_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FECHADEVOLUCION_PELICULA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHADEVOLUCION_PELICULA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FECHADEVOLUCION_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHADEVOLUCION_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MULTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MULTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MULTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MULTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ALQUILER] ([ID_ALQUILER], [CEDULA_CLIENTE], [CEDULA_ADMINISTRADOR], [FECHAALQUILER_PELICULA], [FECHADEVOLUCION_PELICULA], [MULTA]) VALUES (@ID_ALQUILER, @CEDULA_CLIENTE, @CEDULA_ADMINISTRADOR, @FECHAALQUILER_PELICULA, @FECHADEVOLUCION_PELICULA, @MULTA);
SELECT ID_ALQUILER, CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, FECHAALQUILER_PELICULA, FECHADEVOLUCION_PELICULA, MULTA FROM ALQUILER WHERE (ID_ALQUILER = @ID_ALQUILER)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FECHAALQUILER_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHAALQUILER_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FECHADEVOLUCION_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHADEVOLUCION_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MULTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MULTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ALQUILER] SET [ID_ALQUILER] = @ID_ALQUILER, [CEDULA_CLIENTE] = @CEDULA_CLIENTE, [CEDULA_ADMINISTRADOR] = @CEDULA_ADMINISTRADOR, [FECHAALQUILER_PELICULA] = @FECHAALQUILER_PELICULA, [FECHADEVOLUCION_PELICULA] = @FECHADEVOLUCION_PELICULA, [MULTA] = @MULTA WHERE (([ID_ALQUILER] = @Original_ID_ALQUILER) AND ((@IsNull_CEDULA_CLIENTE = 1 AND [CEDULA_CLIENTE] IS NULL) OR ([CEDULA_CLIENTE] = @Original_CEDULA_CLIENTE)) AND ((@IsNull_CEDULA_ADMINISTRADOR = 1 AND [CEDULA_ADMINISTRADOR] IS NULL) OR ([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR)) AND ([FECHAALQUILER_PELICULA] = @Original_FECHAALQUILER_PELICULA) AND ((@IsNull_FECHADEVOLUCION_PELICULA = 1 AND [FECHADEVOLUCION_PELICULA] IS NULL) OR ([FECHADEVOLUCION_PELICULA] = @Original_FECHADEVOLUCION_PELICULA)) AND ((@IsNull_MULTA = 1 AND [MULTA] IS NULL) OR ([MULTA] = @Original_MULTA)));
SELECT ID_ALQUILER, CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, FECHAALQUILER_PELICULA, FECHADEVOLUCION_PELICULA, MULTA FROM ALQUILER WHERE (ID_ALQUILER = @ID_ALQUILER)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FECHAALQUILER_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHAALQUILER_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FECHADEVOLUCION_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHADEVOLUCION_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MULTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MULTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_CLIENTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FECHAALQUILER_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHAALQUILER_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FECHADEVOLUCION_PELICULA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHADEVOLUCION_PELICULA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FECHADEVOLUCION_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECHADEVOLUCION_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MULTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MULTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MULTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MULTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AlquilerPeliculas.Properties.Settings.Default.VideoClubConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ALQUILER, CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, FECHAALQUILER_PELICULA," +
                " FECHADEVOLUCION_PELICULA, MULTA FROM dbo.ALQUILER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BDVideoClubDataSet.ALQUILERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BDVideoClubDataSet.ALQUILERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BDVideoClubDataSet.ALQUILERDataTable dataTable = new BDVideoClubDataSet.ALQUILERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet.ALQUILERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ALQUILER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID_ALQUILER, string Original_CEDULA_CLIENTE, string Original_CEDULA_ADMINISTRADOR, System.DateTime Original_FECHAALQUILER_PELICULA, global::System.Nullable<global::System.DateTime> Original_FECHADEVOLUCION_PELICULA, global::System.Nullable<double> Original_MULTA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID_ALQUILER));
            if ((Original_CEDULA_CLIENTE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CEDULA_CLIENTE));
            }
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_FECHAALQUILER_PELICULA));
            if ((Original_FECHADEVOLUCION_PELICULA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_FECHADEVOLUCION_PELICULA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MULTA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_MULTA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long ID_ALQUILER, string CEDULA_CLIENTE, string CEDULA_ADMINISTRADOR, System.DateTime FECHAALQUILER_PELICULA, global::System.Nullable<global::System.DateTime> FECHADEVOLUCION_PELICULA, global::System.Nullable<double> MULTA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(ID_ALQUILER));
            if ((CEDULA_CLIENTE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CEDULA_CLIENTE));
            }
            if ((CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(FECHAALQUILER_PELICULA));
            if ((FECHADEVOLUCION_PELICULA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(FECHADEVOLUCION_PELICULA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MULTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(MULTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long ID_ALQUILER, string CEDULA_CLIENTE, string CEDULA_ADMINISTRADOR, System.DateTime FECHAALQUILER_PELICULA, global::System.Nullable<global::System.DateTime> FECHADEVOLUCION_PELICULA, global::System.Nullable<double> MULTA, long Original_ID_ALQUILER, string Original_CEDULA_CLIENTE, string Original_CEDULA_ADMINISTRADOR, System.DateTime Original_FECHAALQUILER_PELICULA, global::System.Nullable<global::System.DateTime> Original_FECHADEVOLUCION_PELICULA, global::System.Nullable<double> Original_MULTA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(ID_ALQUILER));
            if ((CEDULA_CLIENTE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CEDULA_CLIENTE));
            }
            if ((CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(FECHAALQUILER_PELICULA));
            if ((FECHADEVOLUCION_PELICULA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(FECHADEVOLUCION_PELICULA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MULTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(MULTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_ID_ALQUILER));
            if ((Original_CEDULA_CLIENTE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_CEDULA_CLIENTE));
            }
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_FECHAALQUILER_PELICULA));
            if ((Original_FECHADEVOLUCION_PELICULA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_FECHADEVOLUCION_PELICULA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_MULTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_MULTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CEDULA_CLIENTE, string CEDULA_ADMINISTRADOR, System.DateTime FECHAALQUILER_PELICULA, global::System.Nullable<global::System.DateTime> FECHADEVOLUCION_PELICULA, global::System.Nullable<double> MULTA, long Original_ID_ALQUILER, string Original_CEDULA_CLIENTE, string Original_CEDULA_ADMINISTRADOR, System.DateTime Original_FECHAALQUILER_PELICULA, global::System.Nullable<global::System.DateTime> Original_FECHADEVOLUCION_PELICULA, global::System.Nullable<double> Original_MULTA) {
            return this.Update(Original_ID_ALQUILER, CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, FECHAALQUILER_PELICULA, FECHADEVOLUCION_PELICULA, MULTA, Original_ID_ALQUILER, Original_CEDULA_CLIENTE, Original_CEDULA_ADMINISTRADOR, Original_FECHAALQUILER_PELICULA, Original_FECHADEVOLUCION_PELICULA, Original_MULTA);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CLIENTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CLIENTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CLIENTE";
            tableMapping.ColumnMappings.Add("CEDULA_CLIENTE", "CEDULA_CLIENTE");
            tableMapping.ColumnMappings.Add("CEDULA_ADMINISTRADOR", "CEDULA_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("NOMBRE_CLIENTE", "NOMBRE_CLIENTE");
            tableMapping.ColumnMappings.Add("APELLIDO_CLIENTE", "APELLIDO_CLIENTE");
            tableMapping.ColumnMappings.Add("DIRECCION_CLIENTE", "DIRECCION_CLIENTE");
            tableMapping.ColumnMappings.Add("TELEFONO_CLIENTE", "TELEFONO_CLIENTE");
            tableMapping.ColumnMappings.Add("CORREO_CLIENTE", "CORREO_CLIENTE");
            tableMapping.ColumnMappings.Add("CONTRASENA_CLIENTE", "CONTRASENA_CLIENTE");
            tableMapping.ColumnMappings.Add("ESTADO_USUARIO", "ESTADO_USUARIO");
            tableMapping.ColumnMappings.Add("IMAGEN_CLIENTE", "IMAGEN_CLIENTE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CLIENTE] WHERE (([CEDULA_CLIENTE] = @Original_CEDULA_CLIENTE) AND ((@IsNull_CEDULA_ADMINISTRADOR = 1 AND [CEDULA_ADMINISTRADOR] IS NULL) OR ([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR)) AND ([NOMBRE_CLIENTE] = @Original_NOMBRE_CLIENTE) AND ([APELLIDO_CLIENTE] = @Original_APELLIDO_CLIENTE) AND ([DIRECCION_CLIENTE] = @Original_DIRECCION_CLIENTE) AND ([TELEFONO_CLIENTE] = @Original_TELEFONO_CLIENTE) AND ([CORREO_CLIENTE] = @Original_CORREO_CLIENTE) AND ([CONTRASENA_CLIENTE] = @Original_CONTRASENA_CLIENTE) AND ([ESTADO_USUARIO] = @Original_ESTADO_USUARIO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMBRE_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APELLIDO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIRECCION_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CORREO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTRASENA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CLIENTE] ([CEDULA_CLIENTE], [CEDULA_ADMINISTRADOR], [NOMBRE_CLIENTE], [APELLIDO_CLIENTE], [DIRECCION_CLIENTE], [TELEFONO_CLIENTE], [CORREO_CLIENTE], [CONTRASENA_CLIENTE], [ESTADO_USUARIO], [IMAGEN_CLIENTE]) VALUES (@CEDULA_CLIENTE, @CEDULA_ADMINISTRADOR, @NOMBRE_CLIENTE, @APELLIDO_CLIENTE, @DIRECCION_CLIENTE, @TELEFONO_CLIENTE, @CORREO_CLIENTE, @CONTRASENA_CLIENTE, @ESTADO_USUARIO, @IMAGEN_CLIENTE);
SELECT CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, NOMBRE_CLIENTE, APELLIDO_CLIENTE, DIRECCION_CLIENTE, TELEFONO_CLIENTE, CORREO_CLIENTE, CONTRASENA_CLIENTE, ESTADO_USUARIO, IMAGEN_CLIENTE FROM CLIENTE WHERE (CEDULA_CLIENTE = @CEDULA_CLIENTE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMBRE_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APELLIDO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIRECCION_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CORREO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTRASENA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMAGEN_CLIENTE", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMAGEN_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CLIENTE] SET [CEDULA_CLIENTE] = @CEDULA_CLIENTE, [CEDULA_ADMINISTRADOR] = @CEDULA_ADMINISTRADOR, [NOMBRE_CLIENTE] = @NOMBRE_CLIENTE, [APELLIDO_CLIENTE] = @APELLIDO_CLIENTE, [DIRECCION_CLIENTE] = @DIRECCION_CLIENTE, [TELEFONO_CLIENTE] = @TELEFONO_CLIENTE, [CORREO_CLIENTE] = @CORREO_CLIENTE, [CONTRASENA_CLIENTE] = @CONTRASENA_CLIENTE, [ESTADO_USUARIO] = @ESTADO_USUARIO, [IMAGEN_CLIENTE] = @IMAGEN_CLIENTE WHERE (([CEDULA_CLIENTE] = @Original_CEDULA_CLIENTE) AND ((@IsNull_CEDULA_ADMINISTRADOR = 1 AND [CEDULA_ADMINISTRADOR] IS NULL) OR ([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR)) AND ([NOMBRE_CLIENTE] = @Original_NOMBRE_CLIENTE) AND ([APELLIDO_CLIENTE] = @Original_APELLIDO_CLIENTE) AND ([DIRECCION_CLIENTE] = @Original_DIRECCION_CLIENTE) AND ([TELEFONO_CLIENTE] = @Original_TELEFONO_CLIENTE) AND ([CORREO_CLIENTE] = @Original_CORREO_CLIENTE) AND ([CONTRASENA_CLIENTE] = @Original_CONTRASENA_CLIENTE) AND ([ESTADO_USUARIO] = @Original_ESTADO_USUARIO));
SELECT CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, NOMBRE_CLIENTE, APELLIDO_CLIENTE, DIRECCION_CLIENTE, TELEFONO_CLIENTE, CORREO_CLIENTE, CONTRASENA_CLIENTE, ESTADO_USUARIO, IMAGEN_CLIENTE FROM CLIENTE WHERE (CEDULA_CLIENTE = @CEDULA_CLIENTE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMBRE_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APELLIDO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIRECCION_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEFONO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CORREO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTRASENA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMAGEN_CLIENTE", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMAGEN_CLIENTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMBRE_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APELLIDO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIRECCION_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TELEFONO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CORREO_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CORREO_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTRASENA_CLIENTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTRASENA_CLIENTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTADO_USUARIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTADO_USUARIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AlquilerPeliculas.Properties.Settings.Default.VideoClubConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, NOMBRE_CLIENTE, APELLIDO_CLIENTE, DI" +
                "RECCION_CLIENTE, TELEFONO_CLIENTE, CORREO_CLIENTE, CONTRASENA_CLIENTE, ESTADO_US" +
                "UARIO, IMAGEN_CLIENTE FROM dbo.CLIENTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BDVideoClubDataSet.CLIENTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BDVideoClubDataSet.CLIENTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BDVideoClubDataSet.CLIENTEDataTable dataTable = new BDVideoClubDataSet.CLIENTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet.CLIENTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CLIENTE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CEDULA_CLIENTE, string Original_CEDULA_ADMINISTRADOR, string Original_NOMBRE_CLIENTE, string Original_APELLIDO_CLIENTE, string Original_DIRECCION_CLIENTE, string Original_TELEFONO_CLIENTE, string Original_CORREO_CLIENTE, string Original_CONTRASENA_CLIENTE, string Original_ESTADO_USUARIO) {
            if ((Original_CEDULA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CEDULA_CLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CEDULA_CLIENTE));
            }
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            if ((Original_NOMBRE_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_NOMBRE_CLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_NOMBRE_CLIENTE));
            }
            if ((Original_APELLIDO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_APELLIDO_CLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_APELLIDO_CLIENTE));
            }
            if ((Original_DIRECCION_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_DIRECCION_CLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DIRECCION_CLIENTE));
            }
            if ((Original_TELEFONO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_TELEFONO_CLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TELEFONO_CLIENTE));
            }
            if ((Original_CORREO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CORREO_CLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_CORREO_CLIENTE));
            }
            if ((Original_CONTRASENA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CONTRASENA_CLIENTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CONTRASENA_CLIENTE));
            }
            if ((Original_ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("Original_ESTADO_USUARIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ESTADO_USUARIO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CEDULA_CLIENTE, string CEDULA_ADMINISTRADOR, string NOMBRE_CLIENTE, string APELLIDO_CLIENTE, string DIRECCION_CLIENTE, string TELEFONO_CLIENTE, string CORREO_CLIENTE, string CONTRASENA_CLIENTE, string ESTADO_USUARIO, byte[] IMAGEN_CLIENTE) {
            if ((CEDULA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("CEDULA_CLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CEDULA_CLIENTE));
            }
            if ((CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            if ((NOMBRE_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("NOMBRE_CLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NOMBRE_CLIENTE));
            }
            if ((APELLIDO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("APELLIDO_CLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(APELLIDO_CLIENTE));
            }
            if ((DIRECCION_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("DIRECCION_CLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DIRECCION_CLIENTE));
            }
            if ((TELEFONO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("TELEFONO_CLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TELEFONO_CLIENTE));
            }
            if ((CORREO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("CORREO_CLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CORREO_CLIENTE));
            }
            if ((CONTRASENA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("CONTRASENA_CLIENTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CONTRASENA_CLIENTE));
            }
            if ((ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("ESTADO_USUARIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ESTADO_USUARIO));
            }
            if ((IMAGEN_CLIENTE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(IMAGEN_CLIENTE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CEDULA_CLIENTE, 
                    string CEDULA_ADMINISTRADOR, 
                    string NOMBRE_CLIENTE, 
                    string APELLIDO_CLIENTE, 
                    string DIRECCION_CLIENTE, 
                    string TELEFONO_CLIENTE, 
                    string CORREO_CLIENTE, 
                    string CONTRASENA_CLIENTE, 
                    string ESTADO_USUARIO, 
                    byte[] IMAGEN_CLIENTE, 
                    string Original_CEDULA_CLIENTE, 
                    string Original_CEDULA_ADMINISTRADOR, 
                    string Original_NOMBRE_CLIENTE, 
                    string Original_APELLIDO_CLIENTE, 
                    string Original_DIRECCION_CLIENTE, 
                    string Original_TELEFONO_CLIENTE, 
                    string Original_CORREO_CLIENTE, 
                    string Original_CONTRASENA_CLIENTE, 
                    string Original_ESTADO_USUARIO) {
            if ((CEDULA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("CEDULA_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CEDULA_CLIENTE));
            }
            if ((CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            if ((NOMBRE_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("NOMBRE_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NOMBRE_CLIENTE));
            }
            if ((APELLIDO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("APELLIDO_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(APELLIDO_CLIENTE));
            }
            if ((DIRECCION_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("DIRECCION_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DIRECCION_CLIENTE));
            }
            if ((TELEFONO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("TELEFONO_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TELEFONO_CLIENTE));
            }
            if ((CORREO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("CORREO_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CORREO_CLIENTE));
            }
            if ((CONTRASENA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("CONTRASENA_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(CONTRASENA_CLIENTE));
            }
            if ((ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("ESTADO_USUARIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ESTADO_USUARIO));
            }
            if ((IMAGEN_CLIENTE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(IMAGEN_CLIENTE));
            }
            if ((Original_CEDULA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CEDULA_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CEDULA_CLIENTE));
            }
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            if ((Original_NOMBRE_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_NOMBRE_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_NOMBRE_CLIENTE));
            }
            if ((Original_APELLIDO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_APELLIDO_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_APELLIDO_CLIENTE));
            }
            if ((Original_DIRECCION_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_DIRECCION_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_DIRECCION_CLIENTE));
            }
            if ((Original_TELEFONO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_TELEFONO_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_TELEFONO_CLIENTE));
            }
            if ((Original_CORREO_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CORREO_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_CORREO_CLIENTE));
            }
            if ((Original_CONTRASENA_CLIENTE == null)) {
                throw new global::System.ArgumentNullException("Original_CONTRASENA_CLIENTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_CONTRASENA_CLIENTE));
            }
            if ((Original_ESTADO_USUARIO == null)) {
                throw new global::System.ArgumentNullException("Original_ESTADO_USUARIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ESTADO_USUARIO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CEDULA_ADMINISTRADOR, 
                    string NOMBRE_CLIENTE, 
                    string APELLIDO_CLIENTE, 
                    string DIRECCION_CLIENTE, 
                    string TELEFONO_CLIENTE, 
                    string CORREO_CLIENTE, 
                    string CONTRASENA_CLIENTE, 
                    string ESTADO_USUARIO, 
                    byte[] IMAGEN_CLIENTE, 
                    string Original_CEDULA_CLIENTE, 
                    string Original_CEDULA_ADMINISTRADOR, 
                    string Original_NOMBRE_CLIENTE, 
                    string Original_APELLIDO_CLIENTE, 
                    string Original_DIRECCION_CLIENTE, 
                    string Original_TELEFONO_CLIENTE, 
                    string Original_CORREO_CLIENTE, 
                    string Original_CONTRASENA_CLIENTE, 
                    string Original_ESTADO_USUARIO) {
            return this.Update(Original_CEDULA_CLIENTE, CEDULA_ADMINISTRADOR, NOMBRE_CLIENTE, APELLIDO_CLIENTE, DIRECCION_CLIENTE, TELEFONO_CLIENTE, CORREO_CLIENTE, CONTRASENA_CLIENTE, ESTADO_USUARIO, IMAGEN_CLIENTE, Original_CEDULA_CLIENTE, Original_CEDULA_ADMINISTRADOR, Original_NOMBRE_CLIENTE, Original_APELLIDO_CLIENTE, Original_DIRECCION_CLIENTE, Original_TELEFONO_CLIENTE, Original_CORREO_CLIENTE, Original_CONTRASENA_CLIENTE, Original_ESTADO_USUARIO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PELICULATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PELICULATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PELICULA";
            tableMapping.ColumnMappings.Add("TITULO_PELICULA", "TITULO_PELICULA");
            tableMapping.ColumnMappings.Add("ID_ALQUILER", "ID_ALQUILER");
            tableMapping.ColumnMappings.Add("CEDULA_ADMINISTRADOR", "CEDULA_ADMINISTRADOR");
            tableMapping.ColumnMappings.Add("DIRECTOR_PELICULA", "DIRECTOR_PELICULA");
            tableMapping.ColumnMappings.Add("ANIOESTRENO_PELICULA", "ANIOESTRENO_PELICULA");
            tableMapping.ColumnMappings.Add("GENERO_PELICULA", "GENERO_PELICULA");
            tableMapping.ColumnMappings.Add("ACTORES_PELICULA", "ACTORES_PELICULA");
            tableMapping.ColumnMappings.Add("SINOPSIS_PELICULA", "SINOPSIS_PELICULA");
            tableMapping.ColumnMappings.Add("COPIA_PELICULA", "COPIA_PELICULA");
            tableMapping.ColumnMappings.Add("IMAGEN_PELICULA", "IMAGEN_PELICULA");
            tableMapping.ColumnMappings.Add("PRECIO_PELICULA", "PRECIO_PELICULA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PELICULA] WHERE (([TITULO_PELICULA] = @Original_TITULO_PELICULA) AND ((@IsNull_ID_ALQUILER = 1 AND [ID_ALQUILER] IS NULL) OR ([ID_ALQUILER] = @Original_ID_ALQUILER)) AND ((@IsNull_CEDULA_ADMINISTRADOR = 1 AND [CEDULA_ADMINISTRADOR] IS NULL) OR ([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR)) AND ([DIRECTOR_PELICULA] = @Original_DIRECTOR_PELICULA) AND ([ANIOESTRENO_PELICULA] = @Original_ANIOESTRENO_PELICULA) AND ([GENERO_PELICULA] = @Original_GENERO_PELICULA) AND ([ACTORES_PELICULA] = @Original_ACTORES_PELICULA) AND ([SINOPSIS_PELICULA] = @Original_SINOPSIS_PELICULA) AND ([COPIA_PELICULA] = @Original_COPIA_PELICULA) AND ([PRECIO_PELICULA] = @Original_PRECIO_PELICULA))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITULO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITULO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_ALQUILER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIRECTOR_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECTOR_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ANIOESTRENO_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANIOESTRENO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GENERO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENERO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACTORES_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTORES_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SINOPSIS_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SINOPSIS_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COPIA_PELICULA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COPIA_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRECIO_PELICULA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECIO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PELICULA] ([TITULO_PELICULA], [ID_ALQUILER], [CEDULA_ADMINISTRADOR], [DIRECTOR_PELICULA], [ANIOESTRENO_PELICULA], [GENERO_PELICULA], [ACTORES_PELICULA], [SINOPSIS_PELICULA], [COPIA_PELICULA], [IMAGEN_PELICULA], [PRECIO_PELICULA]) VALUES (@TITULO_PELICULA, @ID_ALQUILER, @CEDULA_ADMINISTRADOR, @DIRECTOR_PELICULA, @ANIOESTRENO_PELICULA, @GENERO_PELICULA, @ACTORES_PELICULA, @SINOPSIS_PELICULA, @COPIA_PELICULA, @IMAGEN_PELICULA, @PRECIO_PELICULA);
SELECT TITULO_PELICULA, ID_ALQUILER, CEDULA_ADMINISTRADOR, DIRECTOR_PELICULA, ANIOESTRENO_PELICULA, GENERO_PELICULA, ACTORES_PELICULA, SINOPSIS_PELICULA, COPIA_PELICULA, IMAGEN_PELICULA, PRECIO_PELICULA FROM PELICULA WHERE (TITULO_PELICULA = @TITULO_PELICULA)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITULO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITULO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIRECTOR_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECTOR_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANIOESTRENO_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANIOESTRENO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GENERO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENERO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTORES_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTORES_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SINOPSIS_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SINOPSIS_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COPIA_PELICULA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COPIA_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMAGEN_PELICULA", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMAGEN_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRECIO_PELICULA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECIO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PELICULA] SET [TITULO_PELICULA] = @TITULO_PELICULA, [ID_ALQUILER] = @ID_ALQUILER, [CEDULA_ADMINISTRADOR] = @CEDULA_ADMINISTRADOR, [DIRECTOR_PELICULA] = @DIRECTOR_PELICULA, [ANIOESTRENO_PELICULA] = @ANIOESTRENO_PELICULA, [GENERO_PELICULA] = @GENERO_PELICULA, [ACTORES_PELICULA] = @ACTORES_PELICULA, [SINOPSIS_PELICULA] = @SINOPSIS_PELICULA, [COPIA_PELICULA] = @COPIA_PELICULA, [IMAGEN_PELICULA] = @IMAGEN_PELICULA, [PRECIO_PELICULA] = @PRECIO_PELICULA WHERE (([TITULO_PELICULA] = @Original_TITULO_PELICULA) AND ((@IsNull_ID_ALQUILER = 1 AND [ID_ALQUILER] IS NULL) OR ([ID_ALQUILER] = @Original_ID_ALQUILER)) AND ((@IsNull_CEDULA_ADMINISTRADOR = 1 AND [CEDULA_ADMINISTRADOR] IS NULL) OR ([CEDULA_ADMINISTRADOR] = @Original_CEDULA_ADMINISTRADOR)) AND ([DIRECTOR_PELICULA] = @Original_DIRECTOR_PELICULA) AND ([ANIOESTRENO_PELICULA] = @Original_ANIOESTRENO_PELICULA) AND ([GENERO_PELICULA] = @Original_GENERO_PELICULA) AND ([ACTORES_PELICULA] = @Original_ACTORES_PELICULA) AND ([SINOPSIS_PELICULA] = @Original_SINOPSIS_PELICULA) AND ([COPIA_PELICULA] = @Original_COPIA_PELICULA) AND ([PRECIO_PELICULA] = @Original_PRECIO_PELICULA));
SELECT TITULO_PELICULA, ID_ALQUILER, CEDULA_ADMINISTRADOR, DIRECTOR_PELICULA, ANIOESTRENO_PELICULA, GENERO_PELICULA, ACTORES_PELICULA, SINOPSIS_PELICULA, COPIA_PELICULA, IMAGEN_PELICULA, PRECIO_PELICULA FROM PELICULA WHERE (TITULO_PELICULA = @TITULO_PELICULA)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITULO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITULO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIRECTOR_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECTOR_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANIOESTRENO_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANIOESTRENO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GENERO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENERO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTORES_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTORES_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SINOPSIS_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SINOPSIS_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COPIA_PELICULA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COPIA_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMAGEN_PELICULA", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMAGEN_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRECIO_PELICULA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECIO_PELICULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITULO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITULO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_ALQUILER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ALQUILER", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ALQUILER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEDULA_ADMINISTRADOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ADMINISTRADOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIRECTOR_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIRECTOR_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ANIOESTRENO_PELICULA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANIOESTRENO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GENERO_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENERO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACTORES_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTORES_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SINOPSIS_PELICULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SINOPSIS_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COPIA_PELICULA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COPIA_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRECIO_PELICULA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRECIO_PELICULA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AlquilerPeliculas.Properties.Settings.Default.VideoClubConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TITULO_PELICULA, ID_ALQUILER, CEDULA_ADMINISTRADOR, DIRECTOR_PELICULA, ANI" +
                "OESTRENO_PELICULA, GENERO_PELICULA, ACTORES_PELICULA, SINOPSIS_PELICULA, COPIA_P" +
                "ELICULA, IMAGEN_PELICULA, PRECIO_PELICULA FROM dbo.PELICULA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BDVideoClubDataSet.PELICULADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BDVideoClubDataSet.PELICULADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BDVideoClubDataSet.PELICULADataTable dataTable = new BDVideoClubDataSet.PELICULADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet.PELICULADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BDVideoClubDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PELICULA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TITULO_PELICULA, global::System.Nullable<long> Original_ID_ALQUILER, string Original_CEDULA_ADMINISTRADOR, string Original_DIRECTOR_PELICULA, System.DateTime Original_ANIOESTRENO_PELICULA, string Original_GENERO_PELICULA, string Original_ACTORES_PELICULA, string Original_SINOPSIS_PELICULA, int Original_COPIA_PELICULA, double Original_PRECIO_PELICULA) {
            if ((Original_TITULO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_TITULO_PELICULA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TITULO_PELICULA));
            }
            if ((Original_ID_ALQUILER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_ID_ALQUILER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            if ((Original_DIRECTOR_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_DIRECTOR_PELICULA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DIRECTOR_PELICULA));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ANIOESTRENO_PELICULA));
            if ((Original_GENERO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_GENERO_PELICULA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_GENERO_PELICULA));
            }
            if ((Original_ACTORES_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_ACTORES_PELICULA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ACTORES_PELICULA));
            }
            if ((Original_SINOPSIS_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_SINOPSIS_PELICULA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SINOPSIS_PELICULA));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_COPIA_PELICULA));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_PRECIO_PELICULA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TITULO_PELICULA, global::System.Nullable<long> ID_ALQUILER, string CEDULA_ADMINISTRADOR, string DIRECTOR_PELICULA, System.DateTime ANIOESTRENO_PELICULA, string GENERO_PELICULA, string ACTORES_PELICULA, string SINOPSIS_PELICULA, int COPIA_PELICULA, byte[] IMAGEN_PELICULA, double PRECIO_PELICULA) {
            if ((TITULO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("TITULO_PELICULA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TITULO_PELICULA));
            }
            if ((ID_ALQUILER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(ID_ALQUILER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            if ((DIRECTOR_PELICULA == null)) {
                throw new global::System.ArgumentNullException("DIRECTOR_PELICULA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DIRECTOR_PELICULA));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ANIOESTRENO_PELICULA));
            if ((GENERO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("GENERO_PELICULA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(GENERO_PELICULA));
            }
            if ((ACTORES_PELICULA == null)) {
                throw new global::System.ArgumentNullException("ACTORES_PELICULA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACTORES_PELICULA));
            }
            if ((SINOPSIS_PELICULA == null)) {
                throw new global::System.ArgumentNullException("SINOPSIS_PELICULA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SINOPSIS_PELICULA));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(COPIA_PELICULA));
            if ((IMAGEN_PELICULA == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(IMAGEN_PELICULA));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(PRECIO_PELICULA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TITULO_PELICULA, 
                    global::System.Nullable<long> ID_ALQUILER, 
                    string CEDULA_ADMINISTRADOR, 
                    string DIRECTOR_PELICULA, 
                    System.DateTime ANIOESTRENO_PELICULA, 
                    string GENERO_PELICULA, 
                    string ACTORES_PELICULA, 
                    string SINOPSIS_PELICULA, 
                    int COPIA_PELICULA, 
                    byte[] IMAGEN_PELICULA, 
                    double PRECIO_PELICULA, 
                    string Original_TITULO_PELICULA, 
                    global::System.Nullable<long> Original_ID_ALQUILER, 
                    string Original_CEDULA_ADMINISTRADOR, 
                    string Original_DIRECTOR_PELICULA, 
                    System.DateTime Original_ANIOESTRENO_PELICULA, 
                    string Original_GENERO_PELICULA, 
                    string Original_ACTORES_PELICULA, 
                    string Original_SINOPSIS_PELICULA, 
                    int Original_COPIA_PELICULA, 
                    double Original_PRECIO_PELICULA) {
            if ((TITULO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("TITULO_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TITULO_PELICULA));
            }
            if ((ID_ALQUILER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(ID_ALQUILER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CEDULA_ADMINISTRADOR));
            }
            if ((DIRECTOR_PELICULA == null)) {
                throw new global::System.ArgumentNullException("DIRECTOR_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DIRECTOR_PELICULA));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ANIOESTRENO_PELICULA));
            if ((GENERO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("GENERO_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(GENERO_PELICULA));
            }
            if ((ACTORES_PELICULA == null)) {
                throw new global::System.ArgumentNullException("ACTORES_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACTORES_PELICULA));
            }
            if ((SINOPSIS_PELICULA == null)) {
                throw new global::System.ArgumentNullException("SINOPSIS_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SINOPSIS_PELICULA));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(COPIA_PELICULA));
            if ((IMAGEN_PELICULA == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(IMAGEN_PELICULA));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(PRECIO_PELICULA));
            if ((Original_TITULO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_TITULO_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TITULO_PELICULA));
            }
            if ((Original_ID_ALQUILER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_ID_ALQUILER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_CEDULA_ADMINISTRADOR == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CEDULA_ADMINISTRADOR));
            }
            if ((Original_DIRECTOR_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_DIRECTOR_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_DIRECTOR_PELICULA));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_ANIOESTRENO_PELICULA));
            if ((Original_GENERO_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_GENERO_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_GENERO_PELICULA));
            }
            if ((Original_ACTORES_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_ACTORES_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ACTORES_PELICULA));
            }
            if ((Original_SINOPSIS_PELICULA == null)) {
                throw new global::System.ArgumentNullException("Original_SINOPSIS_PELICULA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_SINOPSIS_PELICULA));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_COPIA_PELICULA));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_PRECIO_PELICULA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> ID_ALQUILER, 
                    string CEDULA_ADMINISTRADOR, 
                    string DIRECTOR_PELICULA, 
                    System.DateTime ANIOESTRENO_PELICULA, 
                    string GENERO_PELICULA, 
                    string ACTORES_PELICULA, 
                    string SINOPSIS_PELICULA, 
                    int COPIA_PELICULA, 
                    byte[] IMAGEN_PELICULA, 
                    double PRECIO_PELICULA, 
                    string Original_TITULO_PELICULA, 
                    global::System.Nullable<long> Original_ID_ALQUILER, 
                    string Original_CEDULA_ADMINISTRADOR, 
                    string Original_DIRECTOR_PELICULA, 
                    System.DateTime Original_ANIOESTRENO_PELICULA, 
                    string Original_GENERO_PELICULA, 
                    string Original_ACTORES_PELICULA, 
                    string Original_SINOPSIS_PELICULA, 
                    int Original_COPIA_PELICULA, 
                    double Original_PRECIO_PELICULA) {
            return this.Update(Original_TITULO_PELICULA, ID_ALQUILER, CEDULA_ADMINISTRADOR, DIRECTOR_PELICULA, ANIOESTRENO_PELICULA, GENERO_PELICULA, ACTORES_PELICULA, SINOPSIS_PELICULA, COPIA_PELICULA, IMAGEN_PELICULA, PRECIO_PELICULA, Original_TITULO_PELICULA, Original_ID_ALQUILER, Original_CEDULA_ADMINISTRADOR, Original_DIRECTOR_PELICULA, Original_ANIOESTRENO_PELICULA, Original_GENERO_PELICULA, Original_ACTORES_PELICULA, Original_SINOPSIS_PELICULA, Original_COPIA_PELICULA, Original_PRECIO_PELICULA);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ADMINISTRADORTableAdapter _aDMINISTRADORTableAdapter;
        
        private ALQUILERTableAdapter _aLQUILERTableAdapter;
        
        private CLIENTETableAdapter _cLIENTETableAdapter;
        
        private PELICULATableAdapter _pELICULATableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ADMINISTRADORTableAdapter ADMINISTRADORTableAdapter {
            get {
                return this._aDMINISTRADORTableAdapter;
            }
            set {
                this._aDMINISTRADORTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ALQUILERTableAdapter ALQUILERTableAdapter {
            get {
                return this._aLQUILERTableAdapter;
            }
            set {
                this._aLQUILERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CLIENTETableAdapter CLIENTETableAdapter {
            get {
                return this._cLIENTETableAdapter;
            }
            set {
                this._cLIENTETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PELICULATableAdapter PELICULATableAdapter {
            get {
                return this._pELICULATableAdapter;
            }
            set {
                this._pELICULATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aDMINISTRADORTableAdapter != null) 
                            && (this._aDMINISTRADORTableAdapter.Connection != null))) {
                    return this._aDMINISTRADORTableAdapter.Connection;
                }
                if (((this._aLQUILERTableAdapter != null) 
                            && (this._aLQUILERTableAdapter.Connection != null))) {
                    return this._aLQUILERTableAdapter.Connection;
                }
                if (((this._cLIENTETableAdapter != null) 
                            && (this._cLIENTETableAdapter.Connection != null))) {
                    return this._cLIENTETableAdapter.Connection;
                }
                if (((this._pELICULATableAdapter != null) 
                            && (this._pELICULATableAdapter.Connection != null))) {
                    return this._pELICULATableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aDMINISTRADORTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aLQUILERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cLIENTETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pELICULATableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(BDVideoClubDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aDMINISTRADORTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ADMINISTRADOR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aDMINISTRADORTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aLQUILERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ALQUILER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aLQUILERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pELICULATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PELICULA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pELICULATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(BDVideoClubDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aDMINISTRADORTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ADMINISTRADOR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aDMINISTRADORTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aLQUILERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ALQUILER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aLQUILERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pELICULATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PELICULA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pELICULATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(BDVideoClubDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._pELICULATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PELICULA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pELICULATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aLQUILERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ALQUILER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aLQUILERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cLIENTETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CLIENTE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cLIENTETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aDMINISTRADORTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ADMINISTRADOR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aDMINISTRADORTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(BDVideoClubDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aDMINISTRADORTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aDMINISTRADORTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._aLQUILERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aLQUILERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._cLIENTETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cLIENTETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._pELICULATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pELICULATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aDMINISTRADORTableAdapter != null)) {
                    revertConnections.Add(this._aDMINISTRADORTableAdapter, this._aDMINISTRADORTableAdapter.Connection);
                    this._aDMINISTRADORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aDMINISTRADORTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aDMINISTRADORTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aDMINISTRADORTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aDMINISTRADORTableAdapter.Adapter);
                    }
                }
                if ((this._aLQUILERTableAdapter != null)) {
                    revertConnections.Add(this._aLQUILERTableAdapter, this._aLQUILERTableAdapter.Connection);
                    this._aLQUILERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aLQUILERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aLQUILERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aLQUILERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aLQUILERTableAdapter.Adapter);
                    }
                }
                if ((this._cLIENTETableAdapter != null)) {
                    revertConnections.Add(this._cLIENTETableAdapter, this._cLIENTETableAdapter.Connection);
                    this._cLIENTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cLIENTETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cLIENTETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cLIENTETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cLIENTETableAdapter.Adapter);
                    }
                }
                if ((this._pELICULATableAdapter != null)) {
                    revertConnections.Add(this._pELICULATableAdapter, this._pELICULATableAdapter.Connection);
                    this._pELICULATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pELICULATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pELICULATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pELICULATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pELICULATableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aDMINISTRADORTableAdapter != null)) {
                    this._aDMINISTRADORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aDMINISTRADORTableAdapter]));
                    this._aDMINISTRADORTableAdapter.Transaction = null;
                }
                if ((this._aLQUILERTableAdapter != null)) {
                    this._aLQUILERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aLQUILERTableAdapter]));
                    this._aLQUILERTableAdapter.Transaction = null;
                }
                if ((this._cLIENTETableAdapter != null)) {
                    this._cLIENTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cLIENTETableAdapter]));
                    this._cLIENTETableAdapter.Transaction = null;
                }
                if ((this._pELICULATableAdapter != null)) {
                    this._pELICULATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pELICULATableAdapter]));
                    this._pELICULATableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591